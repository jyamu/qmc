# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = @host_alias@
host_triplet = @host@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AR = @AR@
AR_FLAGS = @AR_FLAGS@
AS = @AS@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFFLAGS = @CXXFFLAGS@
CXXFLAGS = @CXXFLAGS@
CXX_DEBUG_FLAGS = @CXX_DEBUG_FLAGS@
CXX_LIBS = @CXX_LIBS@
CXX_OPTIMIZE_FLAGS = @CXX_OPTIMIZE_FLAGS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
EGREP = @EGREP@
F77 = @F77@
F77_OPTIMIZE_FLAGS = @F77_OPTIMIZE_FLAGS@
F90 = @F90@
F90_OPTIMIZE_FLAGS = @F90_OPTIMIZE_FLAGS@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
HDF5_LIBS = @HDF5_LIBS@

INCLUDES = $(OOMPI_INC)
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
MKL_LIBS = @MKL_LIBS@
MPICC = @MPICC@
MPICXX = @MPICXX@
MPIF77 = @MPIF77@
MPILIBS = @MPILIBS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
QMCBASE_LIBS = @QMCBASE_LIBS@
RANLIB = @RANLIB@
RC = @RC@
SPRNG_LIBS = @SPRNG_LIBS@
STRIP = @STRIP@
UP = @UP@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

#add mpi-related sources and oompi directory for --enable-mpi=yes
pkginclude_HEADERS = \
	ohmms-config.h 


QMCPP_UTILITIES = \
  Utilities/RandRandom.cpp  \
  Utilities/RandomGenerator.cpp  \
  Utilities/OhmmsObject.cpp  \
  Utilities/SpeciesSet.cpp  \
  Utilities/SimpleParser.cpp  \
  Utilities/OhmmsInform.cpp  \
  Utilities/OhmmsInfo.cpp  \
  OhmmsData/Libxml2Doc.cpp \
  OhmmsApp/ProjectData.cpp \
  OhmmsApp/RandomNumberControl.cpp\
  Numerics/OhmmsBlas.cpp \
  Platforms/sysutil.cpp \
  QMCFactory/OneDimGridFactory.cpp


QMCPP_MESSAGE = \
  Message/Communicate.cpp 


QMCPP_PARTICLE = \
  Lattice/Uniform3DGridLayout.cpp  \
  Particle/ParticleSet.cpp  \
  Particle/ParticleSet.BC.cpp  \
  Particle/MCWalkerConfiguration.cpp  \
  Particle/DistanceTable.cpp \
  Particle/HDFWalkerOutput.cpp \
  Particle/HDFWalkerInput0.cpp \
  Particle/HDFWalkerInputCollect.cpp \
  Particle/HDFWalkerInputManager.cpp \
  LongRange/KContainer.cpp \
  LongRange/StructFact.cpp \
  ParticleTags.cpp  \
  ParticleIO/ParticleLayoutIO.cpp  \
  ParticleIO/HDFParticleIO.cpp  \
  ParticleIO/XMLParticleIO.cpp  


QMC_WFS = \
  QMCWaveFunctions/OrbitalBuilderBase.cpp \
  QMCWaveFunctions/JastrowBuilder.cpp\
  QMCWaveFunctions/TrialWaveFunction.cpp  \
  QMCWaveFunctions/JAABuilder.cpp \
  QMCWaveFunctions/NJAABuilder.cpp \
  QMCWaveFunctions/JABBuilder.cpp \
  QMCWaveFunctions/NJABBuilder.cpp \
  QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp \
  QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp \
  QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp\
  QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp\
  QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp\
  QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp\
  QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp\
  QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp\
  QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp\
  QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp\
  QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp\
  QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp\
  QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp\
  QMCWaveFunctions/ThreeBodyGeminal.cpp\
  QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp\
  QMCWaveFunctions/AGPDeterminant.cpp \
  QMCWaveFunctions/AGPDeterminantBuilder.cpp \
  QMCWaveFunctions/WaveFunctionFactory.cpp 


QMC_HAM = \
  QMCHamiltonians/QMCHamiltonian.cpp\
  QMCHamiltonians/LocalPPotential.cpp\
  QMCHamiltonians/NonLocalPPotential.cpp\
  QMCHamiltonians/LocalCorePolPotential.cpp \
  QMCHamiltonians/HamiltonianFactory.cpp


QMC_DRIVERS = \
  QMCDrivers/SimpleFixedNodeBranch.cpp\
  QMCDrivers/QMCDriver.cpp\
  QMCDrivers/DummyQMC.cpp\
  QMCDrivers/VMC.cpp\
  QMCDrivers/VMCParticleByParticle.cpp\
  QMCDrivers/QMCOptimize.cpp\
  QMCDrivers/QMCCostFunction.cpp\
  QMCDrivers/WaveFunctionTester.cpp \
  Estimators/ScalarEstimatorManager.cpp \
  QMCDrivers/WalkerControlBase.cpp \
  QMCDrivers/DMC/DMCMoveAll.cpp \
  QMCDrivers/DMC/DMCPbyP.cpp \
  QMCDrivers/DMC/DMCFactory.cpp \
  QMCDrivers/DMC/DMCUpdateBase.cpp \
  QMCDrivers/DMC/DMCUpdateAll.cpp \
  QMCDrivers/DMC/DMCUpdatePbyP.cpp \
  QMCDrivers/DMC/WalkerControlFactory.cpp \
  QMCDrivers/DMC/WalkerReconfiguration.cpp \
  QMCDrivers/VMCMultiple.cpp \
  QMCDrivers/VMCPbyPMultiple.cpp \
  QMCDrivers/PolymerEstimator.cpp \
  QMCDrivers/RQMCMultiple.cpp \
  QMCDrivers/MultiChain.cpp \
  Estimators/MultipleEnergyEstimator.cpp \
  QMCDrivers/SpaceWarp.cpp \
  QMCDrivers/VMCMultipleWarp.cpp \
  QMCDrivers/VMCPbyPMultiWarp.cpp \
  QMCDrivers/RQMCMultiWarp.cpp


@NEEDTOBUILDOOMPI_TRUE@oompi = OOMPI
@NEEDTOBUILDOOMPI_TRUE@OOMPI_INC = -I$(top_srcdir)/src/OOMPI
@NEEDTOBUILDOOMPI_TRUE@QMC_MPP_SRC = \
@NEEDTOBUILDOOMPI_TRUE@  QMCDrivers/DMC/WalkerControlMPI.cpp \
@NEEDTOBUILDOOMPI_TRUE@  QMCDrivers/DMC/WalkerReconfigurationMPI.cpp


# build the base library used by any application
lib_LIBRARIES = libqmcutil.a libqmcbase.a 
libqmcutil_a_SOURCES = \
	$(QMCPP_UTILITIES) \
	$(QMCPP_MESSAGE) 


libqmcbase_a_SOURCES = \
	$(QMCPP_PARTICLE)   \
	$(QMC_WFS) \
	$(QMC_HAM) \
	$(QMC_DRIVERS) 


#important: build order,
#  i) current directory for the base libraries
# ii) application-dependent libraries: FortranLib, OOMPI, SlaterKosterTB
#iii) the main application: OhmmsApp
# iv) ready to install the header files and libraries
SUBDIRS = $(oompi) . QMCApp
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = ohmms-config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libqmcbase_a_AR = $(AR) cru
libqmcbase_a_LIBADD =
am__objects_1 = Uniform3DGridLayout.$(OBJEXT) ParticleSet.$(OBJEXT) \
	ParticleSet.BC.$(OBJEXT) MCWalkerConfiguration.$(OBJEXT) \
	DistanceTable.$(OBJEXT) HDFWalkerOutput.$(OBJEXT) \
	HDFWalkerInput0.$(OBJEXT) HDFWalkerInputCollect.$(OBJEXT) \
	HDFWalkerInputManager.$(OBJEXT) KContainer.$(OBJEXT) \
	StructFact.$(OBJEXT) ParticleTags.$(OBJEXT) \
	ParticleLayoutIO.$(OBJEXT) HDFParticleIO.$(OBJEXT) \
	XMLParticleIO.$(OBJEXT)
am__objects_2 = OrbitalBuilderBase.$(OBJEXT) JastrowBuilder.$(OBJEXT) \
	TrialWaveFunction.$(OBJEXT) JAABuilder.$(OBJEXT) \
	NJAABuilder.$(OBJEXT) JABBuilder.$(OBJEXT) \
	NJABBuilder.$(OBJEXT) HFAtomicSTOSet.$(OBJEXT) \
	HFAtomicSTOSetBuilder.$(OBJEXT) HeSTOClementiRottie.$(OBJEXT) \
	STOMolecularOrbitals.$(OBJEXT) GTOMolecularOrbitals.$(OBJEXT) \
	RGFBuilderBase.$(OBJEXT) NumericalRGFBuilder.$(OBJEXT) \
	STO2GridBuilder.$(OBJEXT) GTO2GridBuilder.$(OBJEXT) \
	Any2GridBuilder.$(OBJEXT) GridMolecularOrbitals.$(OBJEXT) \
	MolecularOrbitalBuilder.$(OBJEXT) \
	ElectronGasOrbitalBuilder.$(OBJEXT) ThreeBodyGeminal.$(OBJEXT) \
	ThreeBodyGeminalBuilder.$(OBJEXT) AGPDeterminant.$(OBJEXT) \
	AGPDeterminantBuilder.$(OBJEXT) WaveFunctionFactory.$(OBJEXT)
am__objects_3 = QMCHamiltonian.$(OBJEXT) LocalPPotential.$(OBJEXT) \
	NonLocalPPotential.$(OBJEXT) LocalCorePolPotential.$(OBJEXT) \
	HamiltonianFactory.$(OBJEXT)
am__objects_4 = SimpleFixedNodeBranch.$(OBJEXT) QMCDriver.$(OBJEXT) \
	DummyQMC.$(OBJEXT) VMC.$(OBJEXT) \
	VMCParticleByParticle.$(OBJEXT) QMCOptimize.$(OBJEXT) \
	QMCCostFunction.$(OBJEXT) WaveFunctionTester.$(OBJEXT) \
	ScalarEstimatorManager.$(OBJEXT) WalkerControlBase.$(OBJEXT) \
	DMCMoveAll.$(OBJEXT) DMCPbyP.$(OBJEXT) DMCFactory.$(OBJEXT) \
	DMCUpdateBase.$(OBJEXT) DMCUpdateAll.$(OBJEXT) \
	DMCUpdatePbyP.$(OBJEXT) WalkerControlFactory.$(OBJEXT) \
	WalkerReconfiguration.$(OBJEXT) VMCMultiple.$(OBJEXT) \
	VMCPbyPMultiple.$(OBJEXT) PolymerEstimator.$(OBJEXT) \
	RQMCMultiple.$(OBJEXT) MultiChain.$(OBJEXT) \
	MultipleEnergyEstimator.$(OBJEXT) SpaceWarp.$(OBJEXT) \
	VMCMultipleWarp.$(OBJEXT) VMCPbyPMultiWarp.$(OBJEXT) \
	RQMCMultiWarp.$(OBJEXT)
am_libqmcbase_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4)
libqmcbase_a_OBJECTS = $(am_libqmcbase_a_OBJECTS)
libqmcutil_a_AR = $(AR) cru
libqmcutil_a_LIBADD =
am__objects_5 = RandRandom.$(OBJEXT) RandomGenerator.$(OBJEXT) \
	OhmmsObject.$(OBJEXT) SpeciesSet.$(OBJEXT) \
	SimpleParser.$(OBJEXT) OhmmsInform.$(OBJEXT) \
	OhmmsInfo.$(OBJEXT) Libxml2Doc.$(OBJEXT) ProjectData.$(OBJEXT) \
	RandomNumberControl.$(OBJEXT) OhmmsBlas.$(OBJEXT) \
	sysutil.$(OBJEXT) OneDimGridFactory.$(OBJEXT)
am__objects_6 = Communicate.$(OBJEXT)
am_libqmcutil_a_OBJECTS = $(am__objects_5) $(am__objects_6)
libqmcutil_a_OBJECTS = $(am_libqmcutil_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/AGPDeterminant.Po \
@AMDEP_TRUE@	./$(DEPDIR)/AGPDeterminantBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Any2GridBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Communicate.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DMCFactory.Po ./$(DEPDIR)/DMCMoveAll.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DMCPbyP.Po ./$(DEPDIR)/DMCUpdateAll.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DMCUpdateBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DMCUpdatePbyP.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DistanceTable.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DummyQMC.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ElectronGasOrbitalBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GTO2GridBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GTOMolecularOrbitals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/GridMolecularOrbitals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFParticleIO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerInput0.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerInputCollect.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerInputManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HDFWalkerOutput.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HFAtomicSTOSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HFAtomicSTOSetBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HamiltonianFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/HeSTOClementiRottie.Po \
@AMDEP_TRUE@	./$(DEPDIR)/JAABuilder.Po ./$(DEPDIR)/JABBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/JastrowBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KContainer.Po ./$(DEPDIR)/Libxml2Doc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/LocalCorePolPotential.Po \
@AMDEP_TRUE@	./$(DEPDIR)/LocalPPotential.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MCWalkerConfiguration.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MolecularOrbitalBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MultiChain.Po \
@AMDEP_TRUE@	./$(DEPDIR)/MultipleEnergyEstimator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/NJAABuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/NJABBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/NonLocalPPotential.Po \
@AMDEP_TRUE@	./$(DEPDIR)/NumericalRGFBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OhmmsBlas.Po ./$(DEPDIR)/OhmmsInfo.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OhmmsInform.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OhmmsObject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OneDimGridFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/OrbitalBuilderBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleLayoutIO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleSet.BC.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ParticleTags.Po \
@AMDEP_TRUE@	./$(DEPDIR)/PolymerEstimator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ProjectData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QMCCostFunction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QMCDriver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QMCHamiltonian.Po \
@AMDEP_TRUE@	./$(DEPDIR)/QMCOptimize.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RGFBuilderBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RQMCMultiWarp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RQMCMultiple.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RandRandom.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RandomGenerator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RandomNumberControl.Po \
@AMDEP_TRUE@	./$(DEPDIR)/STO2GridBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/STOMolecularOrbitals.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ScalarEstimatorManager.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleFixedNodeBranch.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleParser.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SpaceWarp.Po ./$(DEPDIR)/SpeciesSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/StructFact.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ThreeBodyGeminal.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ThreeBodyGeminalBuilder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TrialWaveFunction.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Uniform3DGridLayout.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VMC.Po ./$(DEPDIR)/VMCMultiple.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VMCMultipleWarp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VMCParticleByParticle.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VMCPbyPMultiWarp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/VMCPbyPMultiple.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WalkerControlBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WalkerControlFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WalkerReconfiguration.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveFunctionFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveFunctionTester.Po \
@AMDEP_TRUE@	./$(DEPDIR)/XMLParticleIO.Po ./$(DEPDIR)/sysutil.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libqmcbase_a_SOURCES) $(libqmcutil_a_SOURCES)
HEADERS = $(pkginclude_HEADERS)


RECURSIVE_TARGETS = info-recursive dvi-recursive install-info-recursive \
	uninstall-info-recursive all-recursive install-data-recursive \
	install-exec-recursive installdirs-recursive install-recursive \
	uninstall-recursive check-recursive installcheck-recursive
DIST_COMMON = $(pkginclude_HEADERS) Makefile.am Makefile.in \
	ohmms-config.h.in
DIST_SUBDIRS = OOMPI . QMCApp
SOURCES = $(libqmcbase_a_SOURCES) $(libqmcutil_a_SOURCES)

all: ohmms-config.h
	$(MAKE) $(AM_MAKEFLAGS) all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

ohmms-config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/ohmms-config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/ohmms-config.h

$(srcdir)/ohmms-config.h.in:  $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/ohmms-config.h.in

distclean-hdr:
	-rm -f ohmms-config.h stamp-h1
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
Uniform3DGridLayout.$(OBJEXT): Lattice/Uniform3DGridLayout.cpp
ParticleSet.$(OBJEXT): Particle/ParticleSet.cpp
ParticleSet.BC.$(OBJEXT): Particle/ParticleSet.BC.cpp
MCWalkerConfiguration.$(OBJEXT): Particle/MCWalkerConfiguration.cpp
DistanceTable.$(OBJEXT): Particle/DistanceTable.cpp
HDFWalkerOutput.$(OBJEXT): Particle/HDFWalkerOutput.cpp
HDFWalkerInput0.$(OBJEXT): Particle/HDFWalkerInput0.cpp
HDFWalkerInputCollect.$(OBJEXT): Particle/HDFWalkerInputCollect.cpp
HDFWalkerInputManager.$(OBJEXT): Particle/HDFWalkerInputManager.cpp
KContainer.$(OBJEXT): LongRange/KContainer.cpp
StructFact.$(OBJEXT): LongRange/StructFact.cpp
ParticleLayoutIO.$(OBJEXT): ParticleIO/ParticleLayoutIO.cpp
HDFParticleIO.$(OBJEXT): ParticleIO/HDFParticleIO.cpp
XMLParticleIO.$(OBJEXT): ParticleIO/XMLParticleIO.cpp
OrbitalBuilderBase.$(OBJEXT): QMCWaveFunctions/OrbitalBuilderBase.cpp
JastrowBuilder.$(OBJEXT): QMCWaveFunctions/JastrowBuilder.cpp
TrialWaveFunction.$(OBJEXT): QMCWaveFunctions/TrialWaveFunction.cpp
JAABuilder.$(OBJEXT): QMCWaveFunctions/JAABuilder.cpp
NJAABuilder.$(OBJEXT): QMCWaveFunctions/NJAABuilder.cpp
JABBuilder.$(OBJEXT): QMCWaveFunctions/JABBuilder.cpp
NJABBuilder.$(OBJEXT): QMCWaveFunctions/NJABBuilder.cpp
HFAtomicSTOSet.$(OBJEXT): \
	QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
HFAtomicSTOSetBuilder.$(OBJEXT): \
	QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
HeSTOClementiRottie.$(OBJEXT): \
	QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
STOMolecularOrbitals.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
GTOMolecularOrbitals.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp
RGFBuilderBase.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp
NumericalRGFBuilder.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp
STO2GridBuilder.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp
GTO2GridBuilder.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp
Any2GridBuilder.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp
GridMolecularOrbitals.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
MolecularOrbitalBuilder.$(OBJEXT): \
	QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
ElectronGasOrbitalBuilder.$(OBJEXT): \
	QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp
ThreeBodyGeminal.$(OBJEXT): QMCWaveFunctions/ThreeBodyGeminal.cpp
ThreeBodyGeminalBuilder.$(OBJEXT): \
	QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp
AGPDeterminant.$(OBJEXT): QMCWaveFunctions/AGPDeterminant.cpp
AGPDeterminantBuilder.$(OBJEXT): \
	QMCWaveFunctions/AGPDeterminantBuilder.cpp
WaveFunctionFactory.$(OBJEXT): QMCWaveFunctions/WaveFunctionFactory.cpp
QMCHamiltonian.$(OBJEXT): QMCHamiltonians/QMCHamiltonian.cpp
LocalPPotential.$(OBJEXT): QMCHamiltonians/LocalPPotential.cpp
NonLocalPPotential.$(OBJEXT): QMCHamiltonians/NonLocalPPotential.cpp
LocalCorePolPotential.$(OBJEXT): \
	QMCHamiltonians/LocalCorePolPotential.cpp
HamiltonianFactory.$(OBJEXT): QMCHamiltonians/HamiltonianFactory.cpp
SimpleFixedNodeBranch.$(OBJEXT): QMCDrivers/SimpleFixedNodeBranch.cpp
QMCDriver.$(OBJEXT): QMCDrivers/QMCDriver.cpp
DummyQMC.$(OBJEXT): QMCDrivers/DummyQMC.cpp
VMC.$(OBJEXT): QMCDrivers/VMC.cpp
VMCParticleByParticle.$(OBJEXT): QMCDrivers/VMCParticleByParticle.cpp
QMCOptimize.$(OBJEXT): QMCDrivers/QMCOptimize.cpp
QMCCostFunction.$(OBJEXT): QMCDrivers/QMCCostFunction.cpp
WaveFunctionTester.$(OBJEXT): QMCDrivers/WaveFunctionTester.cpp
ScalarEstimatorManager.$(OBJEXT): Estimators/ScalarEstimatorManager.cpp
WalkerControlBase.$(OBJEXT): QMCDrivers/WalkerControlBase.cpp
DMCMoveAll.$(OBJEXT): QMCDrivers/DMC/DMCMoveAll.cpp
DMCPbyP.$(OBJEXT): QMCDrivers/DMC/DMCPbyP.cpp
DMCFactory.$(OBJEXT): QMCDrivers/DMC/DMCFactory.cpp
DMCUpdateBase.$(OBJEXT): QMCDrivers/DMC/DMCUpdateBase.cpp
DMCUpdateAll.$(OBJEXT): QMCDrivers/DMC/DMCUpdateAll.cpp
DMCUpdatePbyP.$(OBJEXT): QMCDrivers/DMC/DMCUpdatePbyP.cpp
WalkerControlFactory.$(OBJEXT): QMCDrivers/DMC/WalkerControlFactory.cpp
WalkerReconfiguration.$(OBJEXT): \
	QMCDrivers/DMC/WalkerReconfiguration.cpp
VMCMultiple.$(OBJEXT): QMCDrivers/VMCMultiple.cpp
VMCPbyPMultiple.$(OBJEXT): QMCDrivers/VMCPbyPMultiple.cpp
PolymerEstimator.$(OBJEXT): QMCDrivers/PolymerEstimator.cpp
RQMCMultiple.$(OBJEXT): QMCDrivers/RQMCMultiple.cpp
MultiChain.$(OBJEXT): QMCDrivers/MultiChain.cpp
MultipleEnergyEstimator.$(OBJEXT): \
	Estimators/MultipleEnergyEstimator.cpp
SpaceWarp.$(OBJEXT): QMCDrivers/SpaceWarp.cpp
VMCMultipleWarp.$(OBJEXT): QMCDrivers/VMCMultipleWarp.cpp
VMCPbyPMultiWarp.$(OBJEXT): QMCDrivers/VMCPbyPMultiWarp.cpp
RQMCMultiWarp.$(OBJEXT): QMCDrivers/RQMCMultiWarp.cpp
libqmcbase.a: $(libqmcbase_a_OBJECTS) $(libqmcbase_a_DEPENDENCIES) 
	-rm -f libqmcbase.a
	$(libqmcbase_a_AR) libqmcbase.a $(libqmcbase_a_OBJECTS) $(libqmcbase_a_LIBADD)
	$(RANLIB) libqmcbase.a
RandRandom.$(OBJEXT): Utilities/RandRandom.cpp
RandomGenerator.$(OBJEXT): Utilities/RandomGenerator.cpp
OhmmsObject.$(OBJEXT): Utilities/OhmmsObject.cpp
SpeciesSet.$(OBJEXT): Utilities/SpeciesSet.cpp
SimpleParser.$(OBJEXT): Utilities/SimpleParser.cpp
OhmmsInform.$(OBJEXT): Utilities/OhmmsInform.cpp
OhmmsInfo.$(OBJEXT): Utilities/OhmmsInfo.cpp
Libxml2Doc.$(OBJEXT): OhmmsData/Libxml2Doc.cpp
ProjectData.$(OBJEXT): OhmmsApp/ProjectData.cpp
RandomNumberControl.$(OBJEXT): OhmmsApp/RandomNumberControl.cpp
OhmmsBlas.$(OBJEXT): Numerics/OhmmsBlas.cpp
sysutil.$(OBJEXT): Platforms/sysutil.cpp
OneDimGridFactory.$(OBJEXT): QMCFactory/OneDimGridFactory.cpp
Communicate.$(OBJEXT): Message/Communicate.cpp
libqmcutil.a: $(libqmcutil_a_OBJECTS) $(libqmcutil_a_DEPENDENCIES) 
	-rm -f libqmcutil.a
	$(libqmcutil_a_AR) libqmcutil.a $(libqmcutil_a_OBJECTS) $(libqmcutil_a_LIBADD)
	$(RANLIB) libqmcutil.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AGPDeterminant.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AGPDeterminantBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Any2GridBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Communicate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMCFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMCMoveAll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMCPbyP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMCUpdateAll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMCUpdateBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DMCUpdatePbyP.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DistanceTable.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DummyQMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ElectronGasOrbitalBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GTO2GridBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GTOMolecularOrbitals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GridMolecularOrbitals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFParticleIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerInput0.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerInputCollect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerInputManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HDFWalkerOutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HFAtomicSTOSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HFAtomicSTOSetBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HamiltonianFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HeSTOClementiRottie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JAABuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JABBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/JastrowBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KContainer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Libxml2Doc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LocalCorePolPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LocalPPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MCWalkerConfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MolecularOrbitalBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultiChain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/MultipleEnergyEstimator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NJAABuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NJABBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NonLocalPPotential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NumericalRGFBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsBlas.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsInform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OhmmsObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OneDimGridFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/OrbitalBuilderBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleLayoutIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleSet.BC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ParticleTags.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PolymerEstimator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ProjectData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCCostFunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCDriver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCHamiltonian.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/QMCOptimize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RGFBuilderBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RQMCMultiWarp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RQMCMultiple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandRandom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandomGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RandomNumberControl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/STO2GridBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/STOMolecularOrbitals.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScalarEstimatorManager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleFixedNodeBranch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleParser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpaceWarp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SpeciesSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StructFact.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ThreeBodyGeminal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ThreeBodyGeminalBuilder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrialWaveFunction.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Uniform3DGridLayout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMCMultiple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMCMultipleWarp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMCParticleByParticle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMCPbyPMultiWarp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/VMCPbyPMultiple.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WalkerControlBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WalkerControlFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WalkerReconfiguration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveFunctionFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveFunctionTester.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XMLParticleIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sysutil.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

Uniform3DGridLayout.o: Lattice/Uniform3DGridLayout.cpp
@AMDEP_TRUE@	source='Lattice/Uniform3DGridLayout.cpp' object='Uniform3DGridLayout.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Uniform3DGridLayout.Po' tmpdepfile='$(DEPDIR)/Uniform3DGridLayout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Uniform3DGridLayout.o `test -f 'Lattice/Uniform3DGridLayout.cpp' || echo '$(srcdir)/'`Lattice/Uniform3DGridLayout.cpp

Uniform3DGridLayout.obj: Lattice/Uniform3DGridLayout.cpp
@AMDEP_TRUE@	source='Lattice/Uniform3DGridLayout.cpp' object='Uniform3DGridLayout.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Uniform3DGridLayout.Po' tmpdepfile='$(DEPDIR)/Uniform3DGridLayout.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Uniform3DGridLayout.obj `cygpath -w Lattice/Uniform3DGridLayout.cpp`

Uniform3DGridLayout.lo: Lattice/Uniform3DGridLayout.cpp
@AMDEP_TRUE@	source='Lattice/Uniform3DGridLayout.cpp' object='Uniform3DGridLayout.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Uniform3DGridLayout.Plo' tmpdepfile='$(DEPDIR)/Uniform3DGridLayout.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Uniform3DGridLayout.lo `test -f 'Lattice/Uniform3DGridLayout.cpp' || echo '$(srcdir)/'`Lattice/Uniform3DGridLayout.cpp

ParticleSet.o: Particle/ParticleSet.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.cpp' object='ParticleSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.Po' tmpdepfile='$(DEPDIR)/ParticleSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.o `test -f 'Particle/ParticleSet.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.cpp

ParticleSet.obj: Particle/ParticleSet.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.cpp' object='ParticleSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.Po' tmpdepfile='$(DEPDIR)/ParticleSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.obj `cygpath -w Particle/ParticleSet.cpp`

ParticleSet.lo: Particle/ParticleSet.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.cpp' object='ParticleSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.Plo' tmpdepfile='$(DEPDIR)/ParticleSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.lo `test -f 'Particle/ParticleSet.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.cpp

ParticleSet.BC.o: Particle/ParticleSet.BC.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.BC.cpp' object='ParticleSet.BC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.BC.Po' tmpdepfile='$(DEPDIR)/ParticleSet.BC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.BC.o `test -f 'Particle/ParticleSet.BC.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.BC.cpp

ParticleSet.BC.obj: Particle/ParticleSet.BC.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.BC.cpp' object='ParticleSet.BC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.BC.Po' tmpdepfile='$(DEPDIR)/ParticleSet.BC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.BC.obj `cygpath -w Particle/ParticleSet.BC.cpp`

ParticleSet.BC.lo: Particle/ParticleSet.BC.cpp
@AMDEP_TRUE@	source='Particle/ParticleSet.BC.cpp' object='ParticleSet.BC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleSet.BC.Plo' tmpdepfile='$(DEPDIR)/ParticleSet.BC.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleSet.BC.lo `test -f 'Particle/ParticleSet.BC.cpp' || echo '$(srcdir)/'`Particle/ParticleSet.BC.cpp

MCWalkerConfiguration.o: Particle/MCWalkerConfiguration.cpp
@AMDEP_TRUE@	source='Particle/MCWalkerConfiguration.cpp' object='MCWalkerConfiguration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MCWalkerConfiguration.Po' tmpdepfile='$(DEPDIR)/MCWalkerConfiguration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MCWalkerConfiguration.o `test -f 'Particle/MCWalkerConfiguration.cpp' || echo '$(srcdir)/'`Particle/MCWalkerConfiguration.cpp

MCWalkerConfiguration.obj: Particle/MCWalkerConfiguration.cpp
@AMDEP_TRUE@	source='Particle/MCWalkerConfiguration.cpp' object='MCWalkerConfiguration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MCWalkerConfiguration.Po' tmpdepfile='$(DEPDIR)/MCWalkerConfiguration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MCWalkerConfiguration.obj `cygpath -w Particle/MCWalkerConfiguration.cpp`

MCWalkerConfiguration.lo: Particle/MCWalkerConfiguration.cpp
@AMDEP_TRUE@	source='Particle/MCWalkerConfiguration.cpp' object='MCWalkerConfiguration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MCWalkerConfiguration.Plo' tmpdepfile='$(DEPDIR)/MCWalkerConfiguration.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MCWalkerConfiguration.lo `test -f 'Particle/MCWalkerConfiguration.cpp' || echo '$(srcdir)/'`Particle/MCWalkerConfiguration.cpp

DistanceTable.o: Particle/DistanceTable.cpp
@AMDEP_TRUE@	source='Particle/DistanceTable.cpp' object='DistanceTable.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DistanceTable.Po' tmpdepfile='$(DEPDIR)/DistanceTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistanceTable.o `test -f 'Particle/DistanceTable.cpp' || echo '$(srcdir)/'`Particle/DistanceTable.cpp

DistanceTable.obj: Particle/DistanceTable.cpp
@AMDEP_TRUE@	source='Particle/DistanceTable.cpp' object='DistanceTable.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DistanceTable.Po' tmpdepfile='$(DEPDIR)/DistanceTable.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistanceTable.obj `cygpath -w Particle/DistanceTable.cpp`

DistanceTable.lo: Particle/DistanceTable.cpp
@AMDEP_TRUE@	source='Particle/DistanceTable.cpp' object='DistanceTable.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DistanceTable.Plo' tmpdepfile='$(DEPDIR)/DistanceTable.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DistanceTable.lo `test -f 'Particle/DistanceTable.cpp' || echo '$(srcdir)/'`Particle/DistanceTable.cpp

HDFWalkerOutput.o: Particle/HDFWalkerOutput.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerOutput.cpp' object='HDFWalkerOutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerOutput.Po' tmpdepfile='$(DEPDIR)/HDFWalkerOutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerOutput.o `test -f 'Particle/HDFWalkerOutput.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerOutput.cpp

HDFWalkerOutput.obj: Particle/HDFWalkerOutput.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerOutput.cpp' object='HDFWalkerOutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerOutput.Po' tmpdepfile='$(DEPDIR)/HDFWalkerOutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerOutput.obj `cygpath -w Particle/HDFWalkerOutput.cpp`

HDFWalkerOutput.lo: Particle/HDFWalkerOutput.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerOutput.cpp' object='HDFWalkerOutput.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerOutput.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerOutput.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerOutput.lo `test -f 'Particle/HDFWalkerOutput.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerOutput.cpp

HDFWalkerInput0.o: Particle/HDFWalkerInput0.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInput0.cpp' object='HDFWalkerInput0.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInput0.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInput0.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInput0.o `test -f 'Particle/HDFWalkerInput0.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInput0.cpp

HDFWalkerInput0.obj: Particle/HDFWalkerInput0.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInput0.cpp' object='HDFWalkerInput0.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInput0.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInput0.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInput0.obj `cygpath -w Particle/HDFWalkerInput0.cpp`

HDFWalkerInput0.lo: Particle/HDFWalkerInput0.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInput0.cpp' object='HDFWalkerInput0.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInput0.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerInput0.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInput0.lo `test -f 'Particle/HDFWalkerInput0.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInput0.cpp

HDFWalkerInputCollect.o: Particle/HDFWalkerInputCollect.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputCollect.cpp' object='HDFWalkerInputCollect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputCollect.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputCollect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputCollect.o `test -f 'Particle/HDFWalkerInputCollect.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputCollect.cpp

HDFWalkerInputCollect.obj: Particle/HDFWalkerInputCollect.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputCollect.cpp' object='HDFWalkerInputCollect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputCollect.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputCollect.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputCollect.obj `cygpath -w Particle/HDFWalkerInputCollect.cpp`

HDFWalkerInputCollect.lo: Particle/HDFWalkerInputCollect.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputCollect.cpp' object='HDFWalkerInputCollect.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputCollect.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerInputCollect.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputCollect.lo `test -f 'Particle/HDFWalkerInputCollect.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputCollect.cpp

HDFWalkerInputManager.o: Particle/HDFWalkerInputManager.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputManager.cpp' object='HDFWalkerInputManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputManager.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputManager.o `test -f 'Particle/HDFWalkerInputManager.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputManager.cpp

HDFWalkerInputManager.obj: Particle/HDFWalkerInputManager.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputManager.cpp' object='HDFWalkerInputManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputManager.Po' tmpdepfile='$(DEPDIR)/HDFWalkerInputManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputManager.obj `cygpath -w Particle/HDFWalkerInputManager.cpp`

HDFWalkerInputManager.lo: Particle/HDFWalkerInputManager.cpp
@AMDEP_TRUE@	source='Particle/HDFWalkerInputManager.cpp' object='HDFWalkerInputManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFWalkerInputManager.Plo' tmpdepfile='$(DEPDIR)/HDFWalkerInputManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFWalkerInputManager.lo `test -f 'Particle/HDFWalkerInputManager.cpp' || echo '$(srcdir)/'`Particle/HDFWalkerInputManager.cpp

KContainer.o: LongRange/KContainer.cpp
@AMDEP_TRUE@	source='LongRange/KContainer.cpp' object='KContainer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/KContainer.Po' tmpdepfile='$(DEPDIR)/KContainer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KContainer.o `test -f 'LongRange/KContainer.cpp' || echo '$(srcdir)/'`LongRange/KContainer.cpp

KContainer.obj: LongRange/KContainer.cpp
@AMDEP_TRUE@	source='LongRange/KContainer.cpp' object='KContainer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/KContainer.Po' tmpdepfile='$(DEPDIR)/KContainer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KContainer.obj `cygpath -w LongRange/KContainer.cpp`

KContainer.lo: LongRange/KContainer.cpp
@AMDEP_TRUE@	source='LongRange/KContainer.cpp' object='KContainer.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/KContainer.Plo' tmpdepfile='$(DEPDIR)/KContainer.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KContainer.lo `test -f 'LongRange/KContainer.cpp' || echo '$(srcdir)/'`LongRange/KContainer.cpp

StructFact.o: LongRange/StructFact.cpp
@AMDEP_TRUE@	source='LongRange/StructFact.cpp' object='StructFact.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StructFact.Po' tmpdepfile='$(DEPDIR)/StructFact.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StructFact.o `test -f 'LongRange/StructFact.cpp' || echo '$(srcdir)/'`LongRange/StructFact.cpp

StructFact.obj: LongRange/StructFact.cpp
@AMDEP_TRUE@	source='LongRange/StructFact.cpp' object='StructFact.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StructFact.Po' tmpdepfile='$(DEPDIR)/StructFact.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StructFact.obj `cygpath -w LongRange/StructFact.cpp`

StructFact.lo: LongRange/StructFact.cpp
@AMDEP_TRUE@	source='LongRange/StructFact.cpp' object='StructFact.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/StructFact.Plo' tmpdepfile='$(DEPDIR)/StructFact.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o StructFact.lo `test -f 'LongRange/StructFact.cpp' || echo '$(srcdir)/'`LongRange/StructFact.cpp

ParticleLayoutIO.o: ParticleIO/ParticleLayoutIO.cpp
@AMDEP_TRUE@	source='ParticleIO/ParticleLayoutIO.cpp' object='ParticleLayoutIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleLayoutIO.Po' tmpdepfile='$(DEPDIR)/ParticleLayoutIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleLayoutIO.o `test -f 'ParticleIO/ParticleLayoutIO.cpp' || echo '$(srcdir)/'`ParticleIO/ParticleLayoutIO.cpp

ParticleLayoutIO.obj: ParticleIO/ParticleLayoutIO.cpp
@AMDEP_TRUE@	source='ParticleIO/ParticleLayoutIO.cpp' object='ParticleLayoutIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleLayoutIO.Po' tmpdepfile='$(DEPDIR)/ParticleLayoutIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleLayoutIO.obj `cygpath -w ParticleIO/ParticleLayoutIO.cpp`

ParticleLayoutIO.lo: ParticleIO/ParticleLayoutIO.cpp
@AMDEP_TRUE@	source='ParticleIO/ParticleLayoutIO.cpp' object='ParticleLayoutIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ParticleLayoutIO.Plo' tmpdepfile='$(DEPDIR)/ParticleLayoutIO.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ParticleLayoutIO.lo `test -f 'ParticleIO/ParticleLayoutIO.cpp' || echo '$(srcdir)/'`ParticleIO/ParticleLayoutIO.cpp

HDFParticleIO.o: ParticleIO/HDFParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/HDFParticleIO.cpp' object='HDFParticleIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFParticleIO.Po' tmpdepfile='$(DEPDIR)/HDFParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFParticleIO.o `test -f 'ParticleIO/HDFParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/HDFParticleIO.cpp

HDFParticleIO.obj: ParticleIO/HDFParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/HDFParticleIO.cpp' object='HDFParticleIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFParticleIO.Po' tmpdepfile='$(DEPDIR)/HDFParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFParticleIO.obj `cygpath -w ParticleIO/HDFParticleIO.cpp`

HDFParticleIO.lo: ParticleIO/HDFParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/HDFParticleIO.cpp' object='HDFParticleIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HDFParticleIO.Plo' tmpdepfile='$(DEPDIR)/HDFParticleIO.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HDFParticleIO.lo `test -f 'ParticleIO/HDFParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/HDFParticleIO.cpp

XMLParticleIO.o: ParticleIO/XMLParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/XMLParticleIO.cpp' object='XMLParticleIO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/XMLParticleIO.Po' tmpdepfile='$(DEPDIR)/XMLParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLParticleIO.o `test -f 'ParticleIO/XMLParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/XMLParticleIO.cpp

XMLParticleIO.obj: ParticleIO/XMLParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/XMLParticleIO.cpp' object='XMLParticleIO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/XMLParticleIO.Po' tmpdepfile='$(DEPDIR)/XMLParticleIO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLParticleIO.obj `cygpath -w ParticleIO/XMLParticleIO.cpp`

XMLParticleIO.lo: ParticleIO/XMLParticleIO.cpp
@AMDEP_TRUE@	source='ParticleIO/XMLParticleIO.cpp' object='XMLParticleIO.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/XMLParticleIO.Plo' tmpdepfile='$(DEPDIR)/XMLParticleIO.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o XMLParticleIO.lo `test -f 'ParticleIO/XMLParticleIO.cpp' || echo '$(srcdir)/'`ParticleIO/XMLParticleIO.cpp

OrbitalBuilderBase.o: QMCWaveFunctions/OrbitalBuilderBase.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/OrbitalBuilderBase.cpp' object='OrbitalBuilderBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OrbitalBuilderBase.Po' tmpdepfile='$(DEPDIR)/OrbitalBuilderBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OrbitalBuilderBase.o `test -f 'QMCWaveFunctions/OrbitalBuilderBase.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/OrbitalBuilderBase.cpp

OrbitalBuilderBase.obj: QMCWaveFunctions/OrbitalBuilderBase.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/OrbitalBuilderBase.cpp' object='OrbitalBuilderBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OrbitalBuilderBase.Po' tmpdepfile='$(DEPDIR)/OrbitalBuilderBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OrbitalBuilderBase.obj `cygpath -w QMCWaveFunctions/OrbitalBuilderBase.cpp`

OrbitalBuilderBase.lo: QMCWaveFunctions/OrbitalBuilderBase.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/OrbitalBuilderBase.cpp' object='OrbitalBuilderBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OrbitalBuilderBase.Plo' tmpdepfile='$(DEPDIR)/OrbitalBuilderBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OrbitalBuilderBase.lo `test -f 'QMCWaveFunctions/OrbitalBuilderBase.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/OrbitalBuilderBase.cpp

JastrowBuilder.o: QMCWaveFunctions/JastrowBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JastrowBuilder.cpp' object='JastrowBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JastrowBuilder.Po' tmpdepfile='$(DEPDIR)/JastrowBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JastrowBuilder.o `test -f 'QMCWaveFunctions/JastrowBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JastrowBuilder.cpp

JastrowBuilder.obj: QMCWaveFunctions/JastrowBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JastrowBuilder.cpp' object='JastrowBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JastrowBuilder.Po' tmpdepfile='$(DEPDIR)/JastrowBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JastrowBuilder.obj `cygpath -w QMCWaveFunctions/JastrowBuilder.cpp`

JastrowBuilder.lo: QMCWaveFunctions/JastrowBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JastrowBuilder.cpp' object='JastrowBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JastrowBuilder.Plo' tmpdepfile='$(DEPDIR)/JastrowBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JastrowBuilder.lo `test -f 'QMCWaveFunctions/JastrowBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JastrowBuilder.cpp

TrialWaveFunction.o: QMCWaveFunctions/TrialWaveFunction.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/TrialWaveFunction.cpp' object='TrialWaveFunction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TrialWaveFunction.Po' tmpdepfile='$(DEPDIR)/TrialWaveFunction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrialWaveFunction.o `test -f 'QMCWaveFunctions/TrialWaveFunction.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/TrialWaveFunction.cpp

TrialWaveFunction.obj: QMCWaveFunctions/TrialWaveFunction.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/TrialWaveFunction.cpp' object='TrialWaveFunction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TrialWaveFunction.Po' tmpdepfile='$(DEPDIR)/TrialWaveFunction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrialWaveFunction.obj `cygpath -w QMCWaveFunctions/TrialWaveFunction.cpp`

TrialWaveFunction.lo: QMCWaveFunctions/TrialWaveFunction.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/TrialWaveFunction.cpp' object='TrialWaveFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TrialWaveFunction.Plo' tmpdepfile='$(DEPDIR)/TrialWaveFunction.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TrialWaveFunction.lo `test -f 'QMCWaveFunctions/TrialWaveFunction.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/TrialWaveFunction.cpp

JAABuilder.o: QMCWaveFunctions/JAABuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JAABuilder.cpp' object='JAABuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JAABuilder.Po' tmpdepfile='$(DEPDIR)/JAABuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JAABuilder.o `test -f 'QMCWaveFunctions/JAABuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JAABuilder.cpp

JAABuilder.obj: QMCWaveFunctions/JAABuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JAABuilder.cpp' object='JAABuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JAABuilder.Po' tmpdepfile='$(DEPDIR)/JAABuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JAABuilder.obj `cygpath -w QMCWaveFunctions/JAABuilder.cpp`

JAABuilder.lo: QMCWaveFunctions/JAABuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JAABuilder.cpp' object='JAABuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JAABuilder.Plo' tmpdepfile='$(DEPDIR)/JAABuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JAABuilder.lo `test -f 'QMCWaveFunctions/JAABuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JAABuilder.cpp

NJAABuilder.o: QMCWaveFunctions/NJAABuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/NJAABuilder.cpp' object='NJAABuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NJAABuilder.Po' tmpdepfile='$(DEPDIR)/NJAABuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NJAABuilder.o `test -f 'QMCWaveFunctions/NJAABuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/NJAABuilder.cpp

NJAABuilder.obj: QMCWaveFunctions/NJAABuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/NJAABuilder.cpp' object='NJAABuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NJAABuilder.Po' tmpdepfile='$(DEPDIR)/NJAABuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NJAABuilder.obj `cygpath -w QMCWaveFunctions/NJAABuilder.cpp`

NJAABuilder.lo: QMCWaveFunctions/NJAABuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/NJAABuilder.cpp' object='NJAABuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NJAABuilder.Plo' tmpdepfile='$(DEPDIR)/NJAABuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NJAABuilder.lo `test -f 'QMCWaveFunctions/NJAABuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/NJAABuilder.cpp

JABBuilder.o: QMCWaveFunctions/JABBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JABBuilder.cpp' object='JABBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JABBuilder.Po' tmpdepfile='$(DEPDIR)/JABBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JABBuilder.o `test -f 'QMCWaveFunctions/JABBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JABBuilder.cpp

JABBuilder.obj: QMCWaveFunctions/JABBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JABBuilder.cpp' object='JABBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JABBuilder.Po' tmpdepfile='$(DEPDIR)/JABBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JABBuilder.obj `cygpath -w QMCWaveFunctions/JABBuilder.cpp`

JABBuilder.lo: QMCWaveFunctions/JABBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/JABBuilder.cpp' object='JABBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/JABBuilder.Plo' tmpdepfile='$(DEPDIR)/JABBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o JABBuilder.lo `test -f 'QMCWaveFunctions/JABBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/JABBuilder.cpp

NJABBuilder.o: QMCWaveFunctions/NJABBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/NJABBuilder.cpp' object='NJABBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NJABBuilder.Po' tmpdepfile='$(DEPDIR)/NJABBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NJABBuilder.o `test -f 'QMCWaveFunctions/NJABBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/NJABBuilder.cpp

NJABBuilder.obj: QMCWaveFunctions/NJABBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/NJABBuilder.cpp' object='NJABBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NJABBuilder.Po' tmpdepfile='$(DEPDIR)/NJABBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NJABBuilder.obj `cygpath -w QMCWaveFunctions/NJABBuilder.cpp`

NJABBuilder.lo: QMCWaveFunctions/NJABBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/NJABBuilder.cpp' object='NJABBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NJABBuilder.Plo' tmpdepfile='$(DEPDIR)/NJABBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NJABBuilder.lo `test -f 'QMCWaveFunctions/NJABBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/NJABBuilder.cpp

HFAtomicSTOSet.o: QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' object='HFAtomicSTOSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSet.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSet.o `test -f 'QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp

HFAtomicSTOSet.obj: QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' object='HFAtomicSTOSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSet.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSet.obj `cygpath -w QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp`

HFAtomicSTOSet.lo: QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' object='HFAtomicSTOSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSet.Plo' tmpdepfile='$(DEPDIR)/HFAtomicSTOSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSet.lo `test -f 'QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSet.cpp

HFAtomicSTOSetBuilder.o: QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' object='HFAtomicSTOSetBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSetBuilder.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSetBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSetBuilder.o `test -f 'QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp

HFAtomicSTOSetBuilder.obj: QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' object='HFAtomicSTOSetBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSetBuilder.Po' tmpdepfile='$(DEPDIR)/HFAtomicSTOSetBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSetBuilder.obj `cygpath -w QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp`

HFAtomicSTOSetBuilder.lo: QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' object='HFAtomicSTOSetBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HFAtomicSTOSetBuilder.Plo' tmpdepfile='$(DEPDIR)/HFAtomicSTOSetBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HFAtomicSTOSetBuilder.lo `test -f 'QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AtomicOrbitals/HFAtomicSTOSetBuilder.cpp

HeSTOClementiRottie.o: QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' object='HeSTOClementiRottie.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HeSTOClementiRottie.Po' tmpdepfile='$(DEPDIR)/HeSTOClementiRottie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeSTOClementiRottie.o `test -f 'QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp

HeSTOClementiRottie.obj: QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' object='HeSTOClementiRottie.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HeSTOClementiRottie.Po' tmpdepfile='$(DEPDIR)/HeSTOClementiRottie.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeSTOClementiRottie.obj `cygpath -w QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp`

HeSTOClementiRottie.lo: QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' object='HeSTOClementiRottie.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HeSTOClementiRottie.Plo' tmpdepfile='$(DEPDIR)/HeSTOClementiRottie.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HeSTOClementiRottie.lo `test -f 'QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AtomicOrbitals/HeSTOClementiRottie.cpp

STOMolecularOrbitals.o: QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' object='STOMolecularOrbitals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STOMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/STOMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STOMolecularOrbitals.o `test -f 'QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp

STOMolecularOrbitals.obj: QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' object='STOMolecularOrbitals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STOMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/STOMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STOMolecularOrbitals.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp`

STOMolecularOrbitals.lo: QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' object='STOMolecularOrbitals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STOMolecularOrbitals.Plo' tmpdepfile='$(DEPDIR)/STOMolecularOrbitals.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STOMolecularOrbitals.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/STOMolecularOrbitals.cpp

GTOMolecularOrbitals.o: QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp' object='GTOMolecularOrbitals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GTOMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/GTOMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTOMolecularOrbitals.o `test -f 'QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp

GTOMolecularOrbitals.obj: QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp' object='GTOMolecularOrbitals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GTOMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/GTOMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTOMolecularOrbitals.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp`

GTOMolecularOrbitals.lo: QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp' object='GTOMolecularOrbitals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GTOMolecularOrbitals.Plo' tmpdepfile='$(DEPDIR)/GTOMolecularOrbitals.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTOMolecularOrbitals.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/GTOMolecularOrbitals.cpp

RGFBuilderBase.o: QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp' object='RGFBuilderBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RGFBuilderBase.Po' tmpdepfile='$(DEPDIR)/RGFBuilderBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RGFBuilderBase.o `test -f 'QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp

RGFBuilderBase.obj: QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp' object='RGFBuilderBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RGFBuilderBase.Po' tmpdepfile='$(DEPDIR)/RGFBuilderBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RGFBuilderBase.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp`

RGFBuilderBase.lo: QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp' object='RGFBuilderBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RGFBuilderBase.Plo' tmpdepfile='$(DEPDIR)/RGFBuilderBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RGFBuilderBase.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/RGFBuilderBase.cpp

NumericalRGFBuilder.o: QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp' object='NumericalRGFBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NumericalRGFBuilder.Po' tmpdepfile='$(DEPDIR)/NumericalRGFBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NumericalRGFBuilder.o `test -f 'QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp

NumericalRGFBuilder.obj: QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp' object='NumericalRGFBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NumericalRGFBuilder.Po' tmpdepfile='$(DEPDIR)/NumericalRGFBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NumericalRGFBuilder.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp`

NumericalRGFBuilder.lo: QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp' object='NumericalRGFBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NumericalRGFBuilder.Plo' tmpdepfile='$(DEPDIR)/NumericalRGFBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NumericalRGFBuilder.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/NumericalRGFBuilder.cpp

STO2GridBuilder.o: QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp' object='STO2GridBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STO2GridBuilder.Po' tmpdepfile='$(DEPDIR)/STO2GridBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STO2GridBuilder.o `test -f 'QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp

STO2GridBuilder.obj: QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp' object='STO2GridBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STO2GridBuilder.Po' tmpdepfile='$(DEPDIR)/STO2GridBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STO2GridBuilder.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp`

STO2GridBuilder.lo: QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp' object='STO2GridBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/STO2GridBuilder.Plo' tmpdepfile='$(DEPDIR)/STO2GridBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o STO2GridBuilder.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/STO2GridBuilder.cpp

GTO2GridBuilder.o: QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp' object='GTO2GridBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GTO2GridBuilder.Po' tmpdepfile='$(DEPDIR)/GTO2GridBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTO2GridBuilder.o `test -f 'QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp

GTO2GridBuilder.obj: QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp' object='GTO2GridBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GTO2GridBuilder.Po' tmpdepfile='$(DEPDIR)/GTO2GridBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTO2GridBuilder.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp`

GTO2GridBuilder.lo: QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp' object='GTO2GridBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GTO2GridBuilder.Plo' tmpdepfile='$(DEPDIR)/GTO2GridBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GTO2GridBuilder.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/GTO2GridBuilder.cpp

Any2GridBuilder.o: QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp' object='Any2GridBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Any2GridBuilder.Po' tmpdepfile='$(DEPDIR)/Any2GridBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Any2GridBuilder.o `test -f 'QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp

Any2GridBuilder.obj: QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp' object='Any2GridBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Any2GridBuilder.Po' tmpdepfile='$(DEPDIR)/Any2GridBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Any2GridBuilder.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp`

Any2GridBuilder.lo: QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp' object='Any2GridBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Any2GridBuilder.Plo' tmpdepfile='$(DEPDIR)/Any2GridBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Any2GridBuilder.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/Any2GridBuilder.cpp

GridMolecularOrbitals.o: QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' object='GridMolecularOrbitals.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GridMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/GridMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GridMolecularOrbitals.o `test -f 'QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp

GridMolecularOrbitals.obj: QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' object='GridMolecularOrbitals.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GridMolecularOrbitals.Po' tmpdepfile='$(DEPDIR)/GridMolecularOrbitals.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GridMolecularOrbitals.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp`

GridMolecularOrbitals.lo: QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' object='GridMolecularOrbitals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/GridMolecularOrbitals.Plo' tmpdepfile='$(DEPDIR)/GridMolecularOrbitals.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o GridMolecularOrbitals.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/GridMolecularOrbitals.cpp

MolecularOrbitalBuilder.o: QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' object='MolecularOrbitalBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MolecularOrbitalBuilder.Po' tmpdepfile='$(DEPDIR)/MolecularOrbitalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolecularOrbitalBuilder.o `test -f 'QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp

MolecularOrbitalBuilder.obj: QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' object='MolecularOrbitalBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MolecularOrbitalBuilder.Po' tmpdepfile='$(DEPDIR)/MolecularOrbitalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolecularOrbitalBuilder.obj `cygpath -w QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp`

MolecularOrbitalBuilder.lo: QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' object='MolecularOrbitalBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MolecularOrbitalBuilder.Plo' tmpdepfile='$(DEPDIR)/MolecularOrbitalBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MolecularOrbitalBuilder.lo `test -f 'QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/MolecularOrbitals/MolecularOrbitalBuilder.cpp

ElectronGasOrbitalBuilder.o: QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp' object='ElectronGasOrbitalBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ElectronGasOrbitalBuilder.Po' tmpdepfile='$(DEPDIR)/ElectronGasOrbitalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElectronGasOrbitalBuilder.o `test -f 'QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp

ElectronGasOrbitalBuilder.obj: QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp' object='ElectronGasOrbitalBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ElectronGasOrbitalBuilder.Po' tmpdepfile='$(DEPDIR)/ElectronGasOrbitalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElectronGasOrbitalBuilder.obj `cygpath -w QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp`

ElectronGasOrbitalBuilder.lo: QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp' object='ElectronGasOrbitalBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ElectronGasOrbitalBuilder.Plo' tmpdepfile='$(DEPDIR)/ElectronGasOrbitalBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ElectronGasOrbitalBuilder.lo `test -f 'QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/ElectronGasOrbitalBuilder.cpp

ThreeBodyGeminal.o: QMCWaveFunctions/ThreeBodyGeminal.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ThreeBodyGeminal.cpp' object='ThreeBodyGeminal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ThreeBodyGeminal.Po' tmpdepfile='$(DEPDIR)/ThreeBodyGeminal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreeBodyGeminal.o `test -f 'QMCWaveFunctions/ThreeBodyGeminal.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/ThreeBodyGeminal.cpp

ThreeBodyGeminal.obj: QMCWaveFunctions/ThreeBodyGeminal.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ThreeBodyGeminal.cpp' object='ThreeBodyGeminal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ThreeBodyGeminal.Po' tmpdepfile='$(DEPDIR)/ThreeBodyGeminal.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreeBodyGeminal.obj `cygpath -w QMCWaveFunctions/ThreeBodyGeminal.cpp`

ThreeBodyGeminal.lo: QMCWaveFunctions/ThreeBodyGeminal.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ThreeBodyGeminal.cpp' object='ThreeBodyGeminal.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ThreeBodyGeminal.Plo' tmpdepfile='$(DEPDIR)/ThreeBodyGeminal.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreeBodyGeminal.lo `test -f 'QMCWaveFunctions/ThreeBodyGeminal.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/ThreeBodyGeminal.cpp

ThreeBodyGeminalBuilder.o: QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp' object='ThreeBodyGeminalBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ThreeBodyGeminalBuilder.Po' tmpdepfile='$(DEPDIR)/ThreeBodyGeminalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreeBodyGeminalBuilder.o `test -f 'QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp

ThreeBodyGeminalBuilder.obj: QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp' object='ThreeBodyGeminalBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ThreeBodyGeminalBuilder.Po' tmpdepfile='$(DEPDIR)/ThreeBodyGeminalBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreeBodyGeminalBuilder.obj `cygpath -w QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp`

ThreeBodyGeminalBuilder.lo: QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp' object='ThreeBodyGeminalBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ThreeBodyGeminalBuilder.Plo' tmpdepfile='$(DEPDIR)/ThreeBodyGeminalBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ThreeBodyGeminalBuilder.lo `test -f 'QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/ThreeBodyGeminalBuilder.cpp

AGPDeterminant.o: QMCWaveFunctions/AGPDeterminant.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AGPDeterminant.cpp' object='AGPDeterminant.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AGPDeterminant.Po' tmpdepfile='$(DEPDIR)/AGPDeterminant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AGPDeterminant.o `test -f 'QMCWaveFunctions/AGPDeterminant.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AGPDeterminant.cpp

AGPDeterminant.obj: QMCWaveFunctions/AGPDeterminant.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AGPDeterminant.cpp' object='AGPDeterminant.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AGPDeterminant.Po' tmpdepfile='$(DEPDIR)/AGPDeterminant.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AGPDeterminant.obj `cygpath -w QMCWaveFunctions/AGPDeterminant.cpp`

AGPDeterminant.lo: QMCWaveFunctions/AGPDeterminant.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AGPDeterminant.cpp' object='AGPDeterminant.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AGPDeterminant.Plo' tmpdepfile='$(DEPDIR)/AGPDeterminant.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AGPDeterminant.lo `test -f 'QMCWaveFunctions/AGPDeterminant.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AGPDeterminant.cpp

AGPDeterminantBuilder.o: QMCWaveFunctions/AGPDeterminantBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AGPDeterminantBuilder.cpp' object='AGPDeterminantBuilder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AGPDeterminantBuilder.Po' tmpdepfile='$(DEPDIR)/AGPDeterminantBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AGPDeterminantBuilder.o `test -f 'QMCWaveFunctions/AGPDeterminantBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AGPDeterminantBuilder.cpp

AGPDeterminantBuilder.obj: QMCWaveFunctions/AGPDeterminantBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AGPDeterminantBuilder.cpp' object='AGPDeterminantBuilder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AGPDeterminantBuilder.Po' tmpdepfile='$(DEPDIR)/AGPDeterminantBuilder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AGPDeterminantBuilder.obj `cygpath -w QMCWaveFunctions/AGPDeterminantBuilder.cpp`

AGPDeterminantBuilder.lo: QMCWaveFunctions/AGPDeterminantBuilder.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/AGPDeterminantBuilder.cpp' object='AGPDeterminantBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/AGPDeterminantBuilder.Plo' tmpdepfile='$(DEPDIR)/AGPDeterminantBuilder.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AGPDeterminantBuilder.lo `test -f 'QMCWaveFunctions/AGPDeterminantBuilder.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/AGPDeterminantBuilder.cpp

WaveFunctionFactory.o: QMCWaveFunctions/WaveFunctionFactory.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/WaveFunctionFactory.cpp' object='WaveFunctionFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFunctionFactory.Po' tmpdepfile='$(DEPDIR)/WaveFunctionFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFunctionFactory.o `test -f 'QMCWaveFunctions/WaveFunctionFactory.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/WaveFunctionFactory.cpp

WaveFunctionFactory.obj: QMCWaveFunctions/WaveFunctionFactory.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/WaveFunctionFactory.cpp' object='WaveFunctionFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFunctionFactory.Po' tmpdepfile='$(DEPDIR)/WaveFunctionFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFunctionFactory.obj `cygpath -w QMCWaveFunctions/WaveFunctionFactory.cpp`

WaveFunctionFactory.lo: QMCWaveFunctions/WaveFunctionFactory.cpp
@AMDEP_TRUE@	source='QMCWaveFunctions/WaveFunctionFactory.cpp' object='WaveFunctionFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFunctionFactory.Plo' tmpdepfile='$(DEPDIR)/WaveFunctionFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFunctionFactory.lo `test -f 'QMCWaveFunctions/WaveFunctionFactory.cpp' || echo '$(srcdir)/'`QMCWaveFunctions/WaveFunctionFactory.cpp

QMCHamiltonian.o: QMCHamiltonians/QMCHamiltonian.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/QMCHamiltonian.cpp' object='QMCHamiltonian.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCHamiltonian.Po' tmpdepfile='$(DEPDIR)/QMCHamiltonian.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCHamiltonian.o `test -f 'QMCHamiltonians/QMCHamiltonian.cpp' || echo '$(srcdir)/'`QMCHamiltonians/QMCHamiltonian.cpp

QMCHamiltonian.obj: QMCHamiltonians/QMCHamiltonian.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/QMCHamiltonian.cpp' object='QMCHamiltonian.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCHamiltonian.Po' tmpdepfile='$(DEPDIR)/QMCHamiltonian.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCHamiltonian.obj `cygpath -w QMCHamiltonians/QMCHamiltonian.cpp`

QMCHamiltonian.lo: QMCHamiltonians/QMCHamiltonian.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/QMCHamiltonian.cpp' object='QMCHamiltonian.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCHamiltonian.Plo' tmpdepfile='$(DEPDIR)/QMCHamiltonian.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCHamiltonian.lo `test -f 'QMCHamiltonians/QMCHamiltonian.cpp' || echo '$(srcdir)/'`QMCHamiltonians/QMCHamiltonian.cpp

LocalPPotential.o: QMCHamiltonians/LocalPPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/LocalPPotential.cpp' object='LocalPPotential.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LocalPPotential.Po' tmpdepfile='$(DEPDIR)/LocalPPotential.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalPPotential.o `test -f 'QMCHamiltonians/LocalPPotential.cpp' || echo '$(srcdir)/'`QMCHamiltonians/LocalPPotential.cpp

LocalPPotential.obj: QMCHamiltonians/LocalPPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/LocalPPotential.cpp' object='LocalPPotential.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LocalPPotential.Po' tmpdepfile='$(DEPDIR)/LocalPPotential.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalPPotential.obj `cygpath -w QMCHamiltonians/LocalPPotential.cpp`

LocalPPotential.lo: QMCHamiltonians/LocalPPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/LocalPPotential.cpp' object='LocalPPotential.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LocalPPotential.Plo' tmpdepfile='$(DEPDIR)/LocalPPotential.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalPPotential.lo `test -f 'QMCHamiltonians/LocalPPotential.cpp' || echo '$(srcdir)/'`QMCHamiltonians/LocalPPotential.cpp

NonLocalPPotential.o: QMCHamiltonians/NonLocalPPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/NonLocalPPotential.cpp' object='NonLocalPPotential.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NonLocalPPotential.Po' tmpdepfile='$(DEPDIR)/NonLocalPPotential.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NonLocalPPotential.o `test -f 'QMCHamiltonians/NonLocalPPotential.cpp' || echo '$(srcdir)/'`QMCHamiltonians/NonLocalPPotential.cpp

NonLocalPPotential.obj: QMCHamiltonians/NonLocalPPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/NonLocalPPotential.cpp' object='NonLocalPPotential.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NonLocalPPotential.Po' tmpdepfile='$(DEPDIR)/NonLocalPPotential.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NonLocalPPotential.obj `cygpath -w QMCHamiltonians/NonLocalPPotential.cpp`

NonLocalPPotential.lo: QMCHamiltonians/NonLocalPPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/NonLocalPPotential.cpp' object='NonLocalPPotential.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/NonLocalPPotential.Plo' tmpdepfile='$(DEPDIR)/NonLocalPPotential.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NonLocalPPotential.lo `test -f 'QMCHamiltonians/NonLocalPPotential.cpp' || echo '$(srcdir)/'`QMCHamiltonians/NonLocalPPotential.cpp

LocalCorePolPotential.o: QMCHamiltonians/LocalCorePolPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/LocalCorePolPotential.cpp' object='LocalCorePolPotential.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LocalCorePolPotential.Po' tmpdepfile='$(DEPDIR)/LocalCorePolPotential.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalCorePolPotential.o `test -f 'QMCHamiltonians/LocalCorePolPotential.cpp' || echo '$(srcdir)/'`QMCHamiltonians/LocalCorePolPotential.cpp

LocalCorePolPotential.obj: QMCHamiltonians/LocalCorePolPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/LocalCorePolPotential.cpp' object='LocalCorePolPotential.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LocalCorePolPotential.Po' tmpdepfile='$(DEPDIR)/LocalCorePolPotential.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalCorePolPotential.obj `cygpath -w QMCHamiltonians/LocalCorePolPotential.cpp`

LocalCorePolPotential.lo: QMCHamiltonians/LocalCorePolPotential.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/LocalCorePolPotential.cpp' object='LocalCorePolPotential.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/LocalCorePolPotential.Plo' tmpdepfile='$(DEPDIR)/LocalCorePolPotential.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o LocalCorePolPotential.lo `test -f 'QMCHamiltonians/LocalCorePolPotential.cpp' || echo '$(srcdir)/'`QMCHamiltonians/LocalCorePolPotential.cpp

HamiltonianFactory.o: QMCHamiltonians/HamiltonianFactory.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/HamiltonianFactory.cpp' object='HamiltonianFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HamiltonianFactory.Po' tmpdepfile='$(DEPDIR)/HamiltonianFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HamiltonianFactory.o `test -f 'QMCHamiltonians/HamiltonianFactory.cpp' || echo '$(srcdir)/'`QMCHamiltonians/HamiltonianFactory.cpp

HamiltonianFactory.obj: QMCHamiltonians/HamiltonianFactory.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/HamiltonianFactory.cpp' object='HamiltonianFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HamiltonianFactory.Po' tmpdepfile='$(DEPDIR)/HamiltonianFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HamiltonianFactory.obj `cygpath -w QMCHamiltonians/HamiltonianFactory.cpp`

HamiltonianFactory.lo: QMCHamiltonians/HamiltonianFactory.cpp
@AMDEP_TRUE@	source='QMCHamiltonians/HamiltonianFactory.cpp' object='HamiltonianFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/HamiltonianFactory.Plo' tmpdepfile='$(DEPDIR)/HamiltonianFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o HamiltonianFactory.lo `test -f 'QMCHamiltonians/HamiltonianFactory.cpp' || echo '$(srcdir)/'`QMCHamiltonians/HamiltonianFactory.cpp

SimpleFixedNodeBranch.o: QMCDrivers/SimpleFixedNodeBranch.cpp
@AMDEP_TRUE@	source='QMCDrivers/SimpleFixedNodeBranch.cpp' object='SimpleFixedNodeBranch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleFixedNodeBranch.Po' tmpdepfile='$(DEPDIR)/SimpleFixedNodeBranch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleFixedNodeBranch.o `test -f 'QMCDrivers/SimpleFixedNodeBranch.cpp' || echo '$(srcdir)/'`QMCDrivers/SimpleFixedNodeBranch.cpp

SimpleFixedNodeBranch.obj: QMCDrivers/SimpleFixedNodeBranch.cpp
@AMDEP_TRUE@	source='QMCDrivers/SimpleFixedNodeBranch.cpp' object='SimpleFixedNodeBranch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleFixedNodeBranch.Po' tmpdepfile='$(DEPDIR)/SimpleFixedNodeBranch.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleFixedNodeBranch.obj `cygpath -w QMCDrivers/SimpleFixedNodeBranch.cpp`

SimpleFixedNodeBranch.lo: QMCDrivers/SimpleFixedNodeBranch.cpp
@AMDEP_TRUE@	source='QMCDrivers/SimpleFixedNodeBranch.cpp' object='SimpleFixedNodeBranch.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleFixedNodeBranch.Plo' tmpdepfile='$(DEPDIR)/SimpleFixedNodeBranch.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleFixedNodeBranch.lo `test -f 'QMCDrivers/SimpleFixedNodeBranch.cpp' || echo '$(srcdir)/'`QMCDrivers/SimpleFixedNodeBranch.cpp

QMCDriver.o: QMCDrivers/QMCDriver.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCDriver.cpp' object='QMCDriver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCDriver.Po' tmpdepfile='$(DEPDIR)/QMCDriver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCDriver.o `test -f 'QMCDrivers/QMCDriver.cpp' || echo '$(srcdir)/'`QMCDrivers/QMCDriver.cpp

QMCDriver.obj: QMCDrivers/QMCDriver.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCDriver.cpp' object='QMCDriver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCDriver.Po' tmpdepfile='$(DEPDIR)/QMCDriver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCDriver.obj `cygpath -w QMCDrivers/QMCDriver.cpp`

QMCDriver.lo: QMCDrivers/QMCDriver.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCDriver.cpp' object='QMCDriver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCDriver.Plo' tmpdepfile='$(DEPDIR)/QMCDriver.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCDriver.lo `test -f 'QMCDrivers/QMCDriver.cpp' || echo '$(srcdir)/'`QMCDrivers/QMCDriver.cpp

DummyQMC.o: QMCDrivers/DummyQMC.cpp
@AMDEP_TRUE@	source='QMCDrivers/DummyQMC.cpp' object='DummyQMC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DummyQMC.Po' tmpdepfile='$(DEPDIR)/DummyQMC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DummyQMC.o `test -f 'QMCDrivers/DummyQMC.cpp' || echo '$(srcdir)/'`QMCDrivers/DummyQMC.cpp

DummyQMC.obj: QMCDrivers/DummyQMC.cpp
@AMDEP_TRUE@	source='QMCDrivers/DummyQMC.cpp' object='DummyQMC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DummyQMC.Po' tmpdepfile='$(DEPDIR)/DummyQMC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DummyQMC.obj `cygpath -w QMCDrivers/DummyQMC.cpp`

DummyQMC.lo: QMCDrivers/DummyQMC.cpp
@AMDEP_TRUE@	source='QMCDrivers/DummyQMC.cpp' object='DummyQMC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DummyQMC.Plo' tmpdepfile='$(DEPDIR)/DummyQMC.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DummyQMC.lo `test -f 'QMCDrivers/DummyQMC.cpp' || echo '$(srcdir)/'`QMCDrivers/DummyQMC.cpp

VMC.o: QMCDrivers/VMC.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMC.cpp' object='VMC.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMC.Po' tmpdepfile='$(DEPDIR)/VMC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMC.o `test -f 'QMCDrivers/VMC.cpp' || echo '$(srcdir)/'`QMCDrivers/VMC.cpp

VMC.obj: QMCDrivers/VMC.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMC.cpp' object='VMC.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMC.Po' tmpdepfile='$(DEPDIR)/VMC.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMC.obj `cygpath -w QMCDrivers/VMC.cpp`

VMC.lo: QMCDrivers/VMC.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMC.cpp' object='VMC.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMC.Plo' tmpdepfile='$(DEPDIR)/VMC.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMC.lo `test -f 'QMCDrivers/VMC.cpp' || echo '$(srcdir)/'`QMCDrivers/VMC.cpp

VMCParticleByParticle.o: QMCDrivers/VMCParticleByParticle.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCParticleByParticle.cpp' object='VMCParticleByParticle.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCParticleByParticle.Po' tmpdepfile='$(DEPDIR)/VMCParticleByParticle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCParticleByParticle.o `test -f 'QMCDrivers/VMCParticleByParticle.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCParticleByParticle.cpp

VMCParticleByParticle.obj: QMCDrivers/VMCParticleByParticle.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCParticleByParticle.cpp' object='VMCParticleByParticle.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCParticleByParticle.Po' tmpdepfile='$(DEPDIR)/VMCParticleByParticle.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCParticleByParticle.obj `cygpath -w QMCDrivers/VMCParticleByParticle.cpp`

VMCParticleByParticle.lo: QMCDrivers/VMCParticleByParticle.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCParticleByParticle.cpp' object='VMCParticleByParticle.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCParticleByParticle.Plo' tmpdepfile='$(DEPDIR)/VMCParticleByParticle.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCParticleByParticle.lo `test -f 'QMCDrivers/VMCParticleByParticle.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCParticleByParticle.cpp

QMCOptimize.o: QMCDrivers/QMCOptimize.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCOptimize.cpp' object='QMCOptimize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCOptimize.Po' tmpdepfile='$(DEPDIR)/QMCOptimize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCOptimize.o `test -f 'QMCDrivers/QMCOptimize.cpp' || echo '$(srcdir)/'`QMCDrivers/QMCOptimize.cpp

QMCOptimize.obj: QMCDrivers/QMCOptimize.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCOptimize.cpp' object='QMCOptimize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCOptimize.Po' tmpdepfile='$(DEPDIR)/QMCOptimize.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCOptimize.obj `cygpath -w QMCDrivers/QMCOptimize.cpp`

QMCOptimize.lo: QMCDrivers/QMCOptimize.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCOptimize.cpp' object='QMCOptimize.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCOptimize.Plo' tmpdepfile='$(DEPDIR)/QMCOptimize.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCOptimize.lo `test -f 'QMCDrivers/QMCOptimize.cpp' || echo '$(srcdir)/'`QMCDrivers/QMCOptimize.cpp

QMCCostFunction.o: QMCDrivers/QMCCostFunction.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCCostFunction.cpp' object='QMCCostFunction.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCCostFunction.Po' tmpdepfile='$(DEPDIR)/QMCCostFunction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCCostFunction.o `test -f 'QMCDrivers/QMCCostFunction.cpp' || echo '$(srcdir)/'`QMCDrivers/QMCCostFunction.cpp

QMCCostFunction.obj: QMCDrivers/QMCCostFunction.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCCostFunction.cpp' object='QMCCostFunction.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCCostFunction.Po' tmpdepfile='$(DEPDIR)/QMCCostFunction.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCCostFunction.obj `cygpath -w QMCDrivers/QMCCostFunction.cpp`

QMCCostFunction.lo: QMCDrivers/QMCCostFunction.cpp
@AMDEP_TRUE@	source='QMCDrivers/QMCCostFunction.cpp' object='QMCCostFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/QMCCostFunction.Plo' tmpdepfile='$(DEPDIR)/QMCCostFunction.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o QMCCostFunction.lo `test -f 'QMCDrivers/QMCCostFunction.cpp' || echo '$(srcdir)/'`QMCDrivers/QMCCostFunction.cpp

WaveFunctionTester.o: QMCDrivers/WaveFunctionTester.cpp
@AMDEP_TRUE@	source='QMCDrivers/WaveFunctionTester.cpp' object='WaveFunctionTester.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFunctionTester.Po' tmpdepfile='$(DEPDIR)/WaveFunctionTester.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFunctionTester.o `test -f 'QMCDrivers/WaveFunctionTester.cpp' || echo '$(srcdir)/'`QMCDrivers/WaveFunctionTester.cpp

WaveFunctionTester.obj: QMCDrivers/WaveFunctionTester.cpp
@AMDEP_TRUE@	source='QMCDrivers/WaveFunctionTester.cpp' object='WaveFunctionTester.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFunctionTester.Po' tmpdepfile='$(DEPDIR)/WaveFunctionTester.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFunctionTester.obj `cygpath -w QMCDrivers/WaveFunctionTester.cpp`

WaveFunctionTester.lo: QMCDrivers/WaveFunctionTester.cpp
@AMDEP_TRUE@	source='QMCDrivers/WaveFunctionTester.cpp' object='WaveFunctionTester.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveFunctionTester.Plo' tmpdepfile='$(DEPDIR)/WaveFunctionTester.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveFunctionTester.lo `test -f 'QMCDrivers/WaveFunctionTester.cpp' || echo '$(srcdir)/'`QMCDrivers/WaveFunctionTester.cpp

ScalarEstimatorManager.o: Estimators/ScalarEstimatorManager.cpp
@AMDEP_TRUE@	source='Estimators/ScalarEstimatorManager.cpp' object='ScalarEstimatorManager.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ScalarEstimatorManager.Po' tmpdepfile='$(DEPDIR)/ScalarEstimatorManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarEstimatorManager.o `test -f 'Estimators/ScalarEstimatorManager.cpp' || echo '$(srcdir)/'`Estimators/ScalarEstimatorManager.cpp

ScalarEstimatorManager.obj: Estimators/ScalarEstimatorManager.cpp
@AMDEP_TRUE@	source='Estimators/ScalarEstimatorManager.cpp' object='ScalarEstimatorManager.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ScalarEstimatorManager.Po' tmpdepfile='$(DEPDIR)/ScalarEstimatorManager.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarEstimatorManager.obj `cygpath -w Estimators/ScalarEstimatorManager.cpp`

ScalarEstimatorManager.lo: Estimators/ScalarEstimatorManager.cpp
@AMDEP_TRUE@	source='Estimators/ScalarEstimatorManager.cpp' object='ScalarEstimatorManager.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ScalarEstimatorManager.Plo' tmpdepfile='$(DEPDIR)/ScalarEstimatorManager.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ScalarEstimatorManager.lo `test -f 'Estimators/ScalarEstimatorManager.cpp' || echo '$(srcdir)/'`Estimators/ScalarEstimatorManager.cpp

WalkerControlBase.o: QMCDrivers/WalkerControlBase.cpp
@AMDEP_TRUE@	source='QMCDrivers/WalkerControlBase.cpp' object='WalkerControlBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerControlBase.Po' tmpdepfile='$(DEPDIR)/WalkerControlBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerControlBase.o `test -f 'QMCDrivers/WalkerControlBase.cpp' || echo '$(srcdir)/'`QMCDrivers/WalkerControlBase.cpp

WalkerControlBase.obj: QMCDrivers/WalkerControlBase.cpp
@AMDEP_TRUE@	source='QMCDrivers/WalkerControlBase.cpp' object='WalkerControlBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerControlBase.Po' tmpdepfile='$(DEPDIR)/WalkerControlBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerControlBase.obj `cygpath -w QMCDrivers/WalkerControlBase.cpp`

WalkerControlBase.lo: QMCDrivers/WalkerControlBase.cpp
@AMDEP_TRUE@	source='QMCDrivers/WalkerControlBase.cpp' object='WalkerControlBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerControlBase.Plo' tmpdepfile='$(DEPDIR)/WalkerControlBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerControlBase.lo `test -f 'QMCDrivers/WalkerControlBase.cpp' || echo '$(srcdir)/'`QMCDrivers/WalkerControlBase.cpp

DMCMoveAll.o: QMCDrivers/DMC/DMCMoveAll.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCMoveAll.cpp' object='DMCMoveAll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCMoveAll.Po' tmpdepfile='$(DEPDIR)/DMCMoveAll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCMoveAll.o `test -f 'QMCDrivers/DMC/DMCMoveAll.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCMoveAll.cpp

DMCMoveAll.obj: QMCDrivers/DMC/DMCMoveAll.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCMoveAll.cpp' object='DMCMoveAll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCMoveAll.Po' tmpdepfile='$(DEPDIR)/DMCMoveAll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCMoveAll.obj `cygpath -w QMCDrivers/DMC/DMCMoveAll.cpp`

DMCMoveAll.lo: QMCDrivers/DMC/DMCMoveAll.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCMoveAll.cpp' object='DMCMoveAll.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCMoveAll.Plo' tmpdepfile='$(DEPDIR)/DMCMoveAll.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCMoveAll.lo `test -f 'QMCDrivers/DMC/DMCMoveAll.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCMoveAll.cpp

DMCPbyP.o: QMCDrivers/DMC/DMCPbyP.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCPbyP.cpp' object='DMCPbyP.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCPbyP.Po' tmpdepfile='$(DEPDIR)/DMCPbyP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCPbyP.o `test -f 'QMCDrivers/DMC/DMCPbyP.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCPbyP.cpp

DMCPbyP.obj: QMCDrivers/DMC/DMCPbyP.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCPbyP.cpp' object='DMCPbyP.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCPbyP.Po' tmpdepfile='$(DEPDIR)/DMCPbyP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCPbyP.obj `cygpath -w QMCDrivers/DMC/DMCPbyP.cpp`

DMCPbyP.lo: QMCDrivers/DMC/DMCPbyP.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCPbyP.cpp' object='DMCPbyP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCPbyP.Plo' tmpdepfile='$(DEPDIR)/DMCPbyP.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCPbyP.lo `test -f 'QMCDrivers/DMC/DMCPbyP.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCPbyP.cpp

DMCFactory.o: QMCDrivers/DMC/DMCFactory.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCFactory.cpp' object='DMCFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCFactory.Po' tmpdepfile='$(DEPDIR)/DMCFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCFactory.o `test -f 'QMCDrivers/DMC/DMCFactory.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCFactory.cpp

DMCFactory.obj: QMCDrivers/DMC/DMCFactory.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCFactory.cpp' object='DMCFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCFactory.Po' tmpdepfile='$(DEPDIR)/DMCFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCFactory.obj `cygpath -w QMCDrivers/DMC/DMCFactory.cpp`

DMCFactory.lo: QMCDrivers/DMC/DMCFactory.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCFactory.cpp' object='DMCFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCFactory.Plo' tmpdepfile='$(DEPDIR)/DMCFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCFactory.lo `test -f 'QMCDrivers/DMC/DMCFactory.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCFactory.cpp

DMCUpdateBase.o: QMCDrivers/DMC/DMCUpdateBase.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdateBase.cpp' object='DMCUpdateBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdateBase.Po' tmpdepfile='$(DEPDIR)/DMCUpdateBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdateBase.o `test -f 'QMCDrivers/DMC/DMCUpdateBase.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCUpdateBase.cpp

DMCUpdateBase.obj: QMCDrivers/DMC/DMCUpdateBase.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdateBase.cpp' object='DMCUpdateBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdateBase.Po' tmpdepfile='$(DEPDIR)/DMCUpdateBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdateBase.obj `cygpath -w QMCDrivers/DMC/DMCUpdateBase.cpp`

DMCUpdateBase.lo: QMCDrivers/DMC/DMCUpdateBase.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdateBase.cpp' object='DMCUpdateBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdateBase.Plo' tmpdepfile='$(DEPDIR)/DMCUpdateBase.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdateBase.lo `test -f 'QMCDrivers/DMC/DMCUpdateBase.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCUpdateBase.cpp

DMCUpdateAll.o: QMCDrivers/DMC/DMCUpdateAll.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdateAll.cpp' object='DMCUpdateAll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdateAll.Po' tmpdepfile='$(DEPDIR)/DMCUpdateAll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdateAll.o `test -f 'QMCDrivers/DMC/DMCUpdateAll.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCUpdateAll.cpp

DMCUpdateAll.obj: QMCDrivers/DMC/DMCUpdateAll.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdateAll.cpp' object='DMCUpdateAll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdateAll.Po' tmpdepfile='$(DEPDIR)/DMCUpdateAll.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdateAll.obj `cygpath -w QMCDrivers/DMC/DMCUpdateAll.cpp`

DMCUpdateAll.lo: QMCDrivers/DMC/DMCUpdateAll.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdateAll.cpp' object='DMCUpdateAll.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdateAll.Plo' tmpdepfile='$(DEPDIR)/DMCUpdateAll.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdateAll.lo `test -f 'QMCDrivers/DMC/DMCUpdateAll.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCUpdateAll.cpp

DMCUpdatePbyP.o: QMCDrivers/DMC/DMCUpdatePbyP.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdatePbyP.cpp' object='DMCUpdatePbyP.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdatePbyP.Po' tmpdepfile='$(DEPDIR)/DMCUpdatePbyP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdatePbyP.o `test -f 'QMCDrivers/DMC/DMCUpdatePbyP.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCUpdatePbyP.cpp

DMCUpdatePbyP.obj: QMCDrivers/DMC/DMCUpdatePbyP.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdatePbyP.cpp' object='DMCUpdatePbyP.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdatePbyP.Po' tmpdepfile='$(DEPDIR)/DMCUpdatePbyP.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdatePbyP.obj `cygpath -w QMCDrivers/DMC/DMCUpdatePbyP.cpp`

DMCUpdatePbyP.lo: QMCDrivers/DMC/DMCUpdatePbyP.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/DMCUpdatePbyP.cpp' object='DMCUpdatePbyP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DMCUpdatePbyP.Plo' tmpdepfile='$(DEPDIR)/DMCUpdatePbyP.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DMCUpdatePbyP.lo `test -f 'QMCDrivers/DMC/DMCUpdatePbyP.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/DMCUpdatePbyP.cpp

WalkerControlFactory.o: QMCDrivers/DMC/WalkerControlFactory.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/WalkerControlFactory.cpp' object='WalkerControlFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerControlFactory.Po' tmpdepfile='$(DEPDIR)/WalkerControlFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerControlFactory.o `test -f 'QMCDrivers/DMC/WalkerControlFactory.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/WalkerControlFactory.cpp

WalkerControlFactory.obj: QMCDrivers/DMC/WalkerControlFactory.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/WalkerControlFactory.cpp' object='WalkerControlFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerControlFactory.Po' tmpdepfile='$(DEPDIR)/WalkerControlFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerControlFactory.obj `cygpath -w QMCDrivers/DMC/WalkerControlFactory.cpp`

WalkerControlFactory.lo: QMCDrivers/DMC/WalkerControlFactory.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/WalkerControlFactory.cpp' object='WalkerControlFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerControlFactory.Plo' tmpdepfile='$(DEPDIR)/WalkerControlFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerControlFactory.lo `test -f 'QMCDrivers/DMC/WalkerControlFactory.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/WalkerControlFactory.cpp

WalkerReconfiguration.o: QMCDrivers/DMC/WalkerReconfiguration.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/WalkerReconfiguration.cpp' object='WalkerReconfiguration.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerReconfiguration.Po' tmpdepfile='$(DEPDIR)/WalkerReconfiguration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerReconfiguration.o `test -f 'QMCDrivers/DMC/WalkerReconfiguration.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/WalkerReconfiguration.cpp

WalkerReconfiguration.obj: QMCDrivers/DMC/WalkerReconfiguration.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/WalkerReconfiguration.cpp' object='WalkerReconfiguration.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerReconfiguration.Po' tmpdepfile='$(DEPDIR)/WalkerReconfiguration.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerReconfiguration.obj `cygpath -w QMCDrivers/DMC/WalkerReconfiguration.cpp`

WalkerReconfiguration.lo: QMCDrivers/DMC/WalkerReconfiguration.cpp
@AMDEP_TRUE@	source='QMCDrivers/DMC/WalkerReconfiguration.cpp' object='WalkerReconfiguration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WalkerReconfiguration.Plo' tmpdepfile='$(DEPDIR)/WalkerReconfiguration.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WalkerReconfiguration.lo `test -f 'QMCDrivers/DMC/WalkerReconfiguration.cpp' || echo '$(srcdir)/'`QMCDrivers/DMC/WalkerReconfiguration.cpp

VMCMultiple.o: QMCDrivers/VMCMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCMultiple.cpp' object='VMCMultiple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCMultiple.Po' tmpdepfile='$(DEPDIR)/VMCMultiple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCMultiple.o `test -f 'QMCDrivers/VMCMultiple.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCMultiple.cpp

VMCMultiple.obj: QMCDrivers/VMCMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCMultiple.cpp' object='VMCMultiple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCMultiple.Po' tmpdepfile='$(DEPDIR)/VMCMultiple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCMultiple.obj `cygpath -w QMCDrivers/VMCMultiple.cpp`

VMCMultiple.lo: QMCDrivers/VMCMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCMultiple.cpp' object='VMCMultiple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCMultiple.Plo' tmpdepfile='$(DEPDIR)/VMCMultiple.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCMultiple.lo `test -f 'QMCDrivers/VMCMultiple.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCMultiple.cpp

VMCPbyPMultiple.o: QMCDrivers/VMCPbyPMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCPbyPMultiple.cpp' object='VMCPbyPMultiple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCPbyPMultiple.Po' tmpdepfile='$(DEPDIR)/VMCPbyPMultiple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCPbyPMultiple.o `test -f 'QMCDrivers/VMCPbyPMultiple.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCPbyPMultiple.cpp

VMCPbyPMultiple.obj: QMCDrivers/VMCPbyPMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCPbyPMultiple.cpp' object='VMCPbyPMultiple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCPbyPMultiple.Po' tmpdepfile='$(DEPDIR)/VMCPbyPMultiple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCPbyPMultiple.obj `cygpath -w QMCDrivers/VMCPbyPMultiple.cpp`

VMCPbyPMultiple.lo: QMCDrivers/VMCPbyPMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCPbyPMultiple.cpp' object='VMCPbyPMultiple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCPbyPMultiple.Plo' tmpdepfile='$(DEPDIR)/VMCPbyPMultiple.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCPbyPMultiple.lo `test -f 'QMCDrivers/VMCPbyPMultiple.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCPbyPMultiple.cpp

PolymerEstimator.o: QMCDrivers/PolymerEstimator.cpp
@AMDEP_TRUE@	source='QMCDrivers/PolymerEstimator.cpp' object='PolymerEstimator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PolymerEstimator.Po' tmpdepfile='$(DEPDIR)/PolymerEstimator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PolymerEstimator.o `test -f 'QMCDrivers/PolymerEstimator.cpp' || echo '$(srcdir)/'`QMCDrivers/PolymerEstimator.cpp

PolymerEstimator.obj: QMCDrivers/PolymerEstimator.cpp
@AMDEP_TRUE@	source='QMCDrivers/PolymerEstimator.cpp' object='PolymerEstimator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PolymerEstimator.Po' tmpdepfile='$(DEPDIR)/PolymerEstimator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PolymerEstimator.obj `cygpath -w QMCDrivers/PolymerEstimator.cpp`

PolymerEstimator.lo: QMCDrivers/PolymerEstimator.cpp
@AMDEP_TRUE@	source='QMCDrivers/PolymerEstimator.cpp' object='PolymerEstimator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/PolymerEstimator.Plo' tmpdepfile='$(DEPDIR)/PolymerEstimator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o PolymerEstimator.lo `test -f 'QMCDrivers/PolymerEstimator.cpp' || echo '$(srcdir)/'`QMCDrivers/PolymerEstimator.cpp

RQMCMultiple.o: QMCDrivers/RQMCMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/RQMCMultiple.cpp' object='RQMCMultiple.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RQMCMultiple.Po' tmpdepfile='$(DEPDIR)/RQMCMultiple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RQMCMultiple.o `test -f 'QMCDrivers/RQMCMultiple.cpp' || echo '$(srcdir)/'`QMCDrivers/RQMCMultiple.cpp

RQMCMultiple.obj: QMCDrivers/RQMCMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/RQMCMultiple.cpp' object='RQMCMultiple.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RQMCMultiple.Po' tmpdepfile='$(DEPDIR)/RQMCMultiple.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RQMCMultiple.obj `cygpath -w QMCDrivers/RQMCMultiple.cpp`

RQMCMultiple.lo: QMCDrivers/RQMCMultiple.cpp
@AMDEP_TRUE@	source='QMCDrivers/RQMCMultiple.cpp' object='RQMCMultiple.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RQMCMultiple.Plo' tmpdepfile='$(DEPDIR)/RQMCMultiple.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RQMCMultiple.lo `test -f 'QMCDrivers/RQMCMultiple.cpp' || echo '$(srcdir)/'`QMCDrivers/RQMCMultiple.cpp

MultiChain.o: QMCDrivers/MultiChain.cpp
@AMDEP_TRUE@	source='QMCDrivers/MultiChain.cpp' object='MultiChain.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiChain.Po' tmpdepfile='$(DEPDIR)/MultiChain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiChain.o `test -f 'QMCDrivers/MultiChain.cpp' || echo '$(srcdir)/'`QMCDrivers/MultiChain.cpp

MultiChain.obj: QMCDrivers/MultiChain.cpp
@AMDEP_TRUE@	source='QMCDrivers/MultiChain.cpp' object='MultiChain.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiChain.Po' tmpdepfile='$(DEPDIR)/MultiChain.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiChain.obj `cygpath -w QMCDrivers/MultiChain.cpp`

MultiChain.lo: QMCDrivers/MultiChain.cpp
@AMDEP_TRUE@	source='QMCDrivers/MultiChain.cpp' object='MultiChain.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultiChain.Plo' tmpdepfile='$(DEPDIR)/MultiChain.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultiChain.lo `test -f 'QMCDrivers/MultiChain.cpp' || echo '$(srcdir)/'`QMCDrivers/MultiChain.cpp

MultipleEnergyEstimator.o: Estimators/MultipleEnergyEstimator.cpp
@AMDEP_TRUE@	source='Estimators/MultipleEnergyEstimator.cpp' object='MultipleEnergyEstimator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultipleEnergyEstimator.Po' tmpdepfile='$(DEPDIR)/MultipleEnergyEstimator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultipleEnergyEstimator.o `test -f 'Estimators/MultipleEnergyEstimator.cpp' || echo '$(srcdir)/'`Estimators/MultipleEnergyEstimator.cpp

MultipleEnergyEstimator.obj: Estimators/MultipleEnergyEstimator.cpp
@AMDEP_TRUE@	source='Estimators/MultipleEnergyEstimator.cpp' object='MultipleEnergyEstimator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultipleEnergyEstimator.Po' tmpdepfile='$(DEPDIR)/MultipleEnergyEstimator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultipleEnergyEstimator.obj `cygpath -w Estimators/MultipleEnergyEstimator.cpp`

MultipleEnergyEstimator.lo: Estimators/MultipleEnergyEstimator.cpp
@AMDEP_TRUE@	source='Estimators/MultipleEnergyEstimator.cpp' object='MultipleEnergyEstimator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/MultipleEnergyEstimator.Plo' tmpdepfile='$(DEPDIR)/MultipleEnergyEstimator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MultipleEnergyEstimator.lo `test -f 'Estimators/MultipleEnergyEstimator.cpp' || echo '$(srcdir)/'`Estimators/MultipleEnergyEstimator.cpp

SpaceWarp.o: QMCDrivers/SpaceWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/SpaceWarp.cpp' object='SpaceWarp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpaceWarp.Po' tmpdepfile='$(DEPDIR)/SpaceWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpaceWarp.o `test -f 'QMCDrivers/SpaceWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/SpaceWarp.cpp

SpaceWarp.obj: QMCDrivers/SpaceWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/SpaceWarp.cpp' object='SpaceWarp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpaceWarp.Po' tmpdepfile='$(DEPDIR)/SpaceWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpaceWarp.obj `cygpath -w QMCDrivers/SpaceWarp.cpp`

SpaceWarp.lo: QMCDrivers/SpaceWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/SpaceWarp.cpp' object='SpaceWarp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpaceWarp.Plo' tmpdepfile='$(DEPDIR)/SpaceWarp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpaceWarp.lo `test -f 'QMCDrivers/SpaceWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/SpaceWarp.cpp

VMCMultipleWarp.o: QMCDrivers/VMCMultipleWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCMultipleWarp.cpp' object='VMCMultipleWarp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCMultipleWarp.Po' tmpdepfile='$(DEPDIR)/VMCMultipleWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCMultipleWarp.o `test -f 'QMCDrivers/VMCMultipleWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCMultipleWarp.cpp

VMCMultipleWarp.obj: QMCDrivers/VMCMultipleWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCMultipleWarp.cpp' object='VMCMultipleWarp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCMultipleWarp.Po' tmpdepfile='$(DEPDIR)/VMCMultipleWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCMultipleWarp.obj `cygpath -w QMCDrivers/VMCMultipleWarp.cpp`

VMCMultipleWarp.lo: QMCDrivers/VMCMultipleWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCMultipleWarp.cpp' object='VMCMultipleWarp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCMultipleWarp.Plo' tmpdepfile='$(DEPDIR)/VMCMultipleWarp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCMultipleWarp.lo `test -f 'QMCDrivers/VMCMultipleWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCMultipleWarp.cpp

VMCPbyPMultiWarp.o: QMCDrivers/VMCPbyPMultiWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCPbyPMultiWarp.cpp' object='VMCPbyPMultiWarp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCPbyPMultiWarp.Po' tmpdepfile='$(DEPDIR)/VMCPbyPMultiWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCPbyPMultiWarp.o `test -f 'QMCDrivers/VMCPbyPMultiWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCPbyPMultiWarp.cpp

VMCPbyPMultiWarp.obj: QMCDrivers/VMCPbyPMultiWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCPbyPMultiWarp.cpp' object='VMCPbyPMultiWarp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCPbyPMultiWarp.Po' tmpdepfile='$(DEPDIR)/VMCPbyPMultiWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCPbyPMultiWarp.obj `cygpath -w QMCDrivers/VMCPbyPMultiWarp.cpp`

VMCPbyPMultiWarp.lo: QMCDrivers/VMCPbyPMultiWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/VMCPbyPMultiWarp.cpp' object='VMCPbyPMultiWarp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/VMCPbyPMultiWarp.Plo' tmpdepfile='$(DEPDIR)/VMCPbyPMultiWarp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o VMCPbyPMultiWarp.lo `test -f 'QMCDrivers/VMCPbyPMultiWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/VMCPbyPMultiWarp.cpp

RQMCMultiWarp.o: QMCDrivers/RQMCMultiWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/RQMCMultiWarp.cpp' object='RQMCMultiWarp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RQMCMultiWarp.Po' tmpdepfile='$(DEPDIR)/RQMCMultiWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RQMCMultiWarp.o `test -f 'QMCDrivers/RQMCMultiWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/RQMCMultiWarp.cpp

RQMCMultiWarp.obj: QMCDrivers/RQMCMultiWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/RQMCMultiWarp.cpp' object='RQMCMultiWarp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RQMCMultiWarp.Po' tmpdepfile='$(DEPDIR)/RQMCMultiWarp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RQMCMultiWarp.obj `cygpath -w QMCDrivers/RQMCMultiWarp.cpp`

RQMCMultiWarp.lo: QMCDrivers/RQMCMultiWarp.cpp
@AMDEP_TRUE@	source='QMCDrivers/RQMCMultiWarp.cpp' object='RQMCMultiWarp.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RQMCMultiWarp.Plo' tmpdepfile='$(DEPDIR)/RQMCMultiWarp.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RQMCMultiWarp.lo `test -f 'QMCDrivers/RQMCMultiWarp.cpp' || echo '$(srcdir)/'`QMCDrivers/RQMCMultiWarp.cpp

RandRandom.o: Utilities/RandRandom.cpp
@AMDEP_TRUE@	source='Utilities/RandRandom.cpp' object='RandRandom.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandRandom.Po' tmpdepfile='$(DEPDIR)/RandRandom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandRandom.o `test -f 'Utilities/RandRandom.cpp' || echo '$(srcdir)/'`Utilities/RandRandom.cpp

RandRandom.obj: Utilities/RandRandom.cpp
@AMDEP_TRUE@	source='Utilities/RandRandom.cpp' object='RandRandom.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandRandom.Po' tmpdepfile='$(DEPDIR)/RandRandom.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandRandom.obj `cygpath -w Utilities/RandRandom.cpp`

RandRandom.lo: Utilities/RandRandom.cpp
@AMDEP_TRUE@	source='Utilities/RandRandom.cpp' object='RandRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandRandom.Plo' tmpdepfile='$(DEPDIR)/RandRandom.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandRandom.lo `test -f 'Utilities/RandRandom.cpp' || echo '$(srcdir)/'`Utilities/RandRandom.cpp

RandomGenerator.o: Utilities/RandomGenerator.cpp
@AMDEP_TRUE@	source='Utilities/RandomGenerator.cpp' object='RandomGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomGenerator.Po' tmpdepfile='$(DEPDIR)/RandomGenerator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomGenerator.o `test -f 'Utilities/RandomGenerator.cpp' || echo '$(srcdir)/'`Utilities/RandomGenerator.cpp

RandomGenerator.obj: Utilities/RandomGenerator.cpp
@AMDEP_TRUE@	source='Utilities/RandomGenerator.cpp' object='RandomGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomGenerator.Po' tmpdepfile='$(DEPDIR)/RandomGenerator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomGenerator.obj `cygpath -w Utilities/RandomGenerator.cpp`

RandomGenerator.lo: Utilities/RandomGenerator.cpp
@AMDEP_TRUE@	source='Utilities/RandomGenerator.cpp' object='RandomGenerator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomGenerator.Plo' tmpdepfile='$(DEPDIR)/RandomGenerator.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomGenerator.lo `test -f 'Utilities/RandomGenerator.cpp' || echo '$(srcdir)/'`Utilities/RandomGenerator.cpp

OhmmsObject.o: Utilities/OhmmsObject.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsObject.cpp' object='OhmmsObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsObject.Po' tmpdepfile='$(DEPDIR)/OhmmsObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsObject.o `test -f 'Utilities/OhmmsObject.cpp' || echo '$(srcdir)/'`Utilities/OhmmsObject.cpp

OhmmsObject.obj: Utilities/OhmmsObject.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsObject.cpp' object='OhmmsObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsObject.Po' tmpdepfile='$(DEPDIR)/OhmmsObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsObject.obj `cygpath -w Utilities/OhmmsObject.cpp`

OhmmsObject.lo: Utilities/OhmmsObject.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsObject.cpp' object='OhmmsObject.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsObject.Plo' tmpdepfile='$(DEPDIR)/OhmmsObject.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsObject.lo `test -f 'Utilities/OhmmsObject.cpp' || echo '$(srcdir)/'`Utilities/OhmmsObject.cpp

SpeciesSet.o: Utilities/SpeciesSet.cpp
@AMDEP_TRUE@	source='Utilities/SpeciesSet.cpp' object='SpeciesSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpeciesSet.Po' tmpdepfile='$(DEPDIR)/SpeciesSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpeciesSet.o `test -f 'Utilities/SpeciesSet.cpp' || echo '$(srcdir)/'`Utilities/SpeciesSet.cpp

SpeciesSet.obj: Utilities/SpeciesSet.cpp
@AMDEP_TRUE@	source='Utilities/SpeciesSet.cpp' object='SpeciesSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpeciesSet.Po' tmpdepfile='$(DEPDIR)/SpeciesSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpeciesSet.obj `cygpath -w Utilities/SpeciesSet.cpp`

SpeciesSet.lo: Utilities/SpeciesSet.cpp
@AMDEP_TRUE@	source='Utilities/SpeciesSet.cpp' object='SpeciesSet.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SpeciesSet.Plo' tmpdepfile='$(DEPDIR)/SpeciesSet.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpeciesSet.lo `test -f 'Utilities/SpeciesSet.cpp' || echo '$(srcdir)/'`Utilities/SpeciesSet.cpp

SimpleParser.o: Utilities/SimpleParser.cpp
@AMDEP_TRUE@	source='Utilities/SimpleParser.cpp' object='SimpleParser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleParser.Po' tmpdepfile='$(DEPDIR)/SimpleParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleParser.o `test -f 'Utilities/SimpleParser.cpp' || echo '$(srcdir)/'`Utilities/SimpleParser.cpp

SimpleParser.obj: Utilities/SimpleParser.cpp
@AMDEP_TRUE@	source='Utilities/SimpleParser.cpp' object='SimpleParser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleParser.Po' tmpdepfile='$(DEPDIR)/SimpleParser.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleParser.obj `cygpath -w Utilities/SimpleParser.cpp`

SimpleParser.lo: Utilities/SimpleParser.cpp
@AMDEP_TRUE@	source='Utilities/SimpleParser.cpp' object='SimpleParser.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SimpleParser.Plo' tmpdepfile='$(DEPDIR)/SimpleParser.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleParser.lo `test -f 'Utilities/SimpleParser.cpp' || echo '$(srcdir)/'`Utilities/SimpleParser.cpp

OhmmsInform.o: Utilities/OhmmsInform.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInform.cpp' object='OhmmsInform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInform.Po' tmpdepfile='$(DEPDIR)/OhmmsInform.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInform.o `test -f 'Utilities/OhmmsInform.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInform.cpp

OhmmsInform.obj: Utilities/OhmmsInform.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInform.cpp' object='OhmmsInform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInform.Po' tmpdepfile='$(DEPDIR)/OhmmsInform.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInform.obj `cygpath -w Utilities/OhmmsInform.cpp`

OhmmsInform.lo: Utilities/OhmmsInform.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInform.cpp' object='OhmmsInform.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInform.Plo' tmpdepfile='$(DEPDIR)/OhmmsInform.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInform.lo `test -f 'Utilities/OhmmsInform.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInform.cpp

OhmmsInfo.o: Utilities/OhmmsInfo.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInfo.cpp' object='OhmmsInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInfo.Po' tmpdepfile='$(DEPDIR)/OhmmsInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInfo.o `test -f 'Utilities/OhmmsInfo.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInfo.cpp

OhmmsInfo.obj: Utilities/OhmmsInfo.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInfo.cpp' object='OhmmsInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInfo.Po' tmpdepfile='$(DEPDIR)/OhmmsInfo.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInfo.obj `cygpath -w Utilities/OhmmsInfo.cpp`

OhmmsInfo.lo: Utilities/OhmmsInfo.cpp
@AMDEP_TRUE@	source='Utilities/OhmmsInfo.cpp' object='OhmmsInfo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsInfo.Plo' tmpdepfile='$(DEPDIR)/OhmmsInfo.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsInfo.lo `test -f 'Utilities/OhmmsInfo.cpp' || echo '$(srcdir)/'`Utilities/OhmmsInfo.cpp

Libxml2Doc.o: OhmmsData/Libxml2Doc.cpp
@AMDEP_TRUE@	source='OhmmsData/Libxml2Doc.cpp' object='Libxml2Doc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Libxml2Doc.Po' tmpdepfile='$(DEPDIR)/Libxml2Doc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Libxml2Doc.o `test -f 'OhmmsData/Libxml2Doc.cpp' || echo '$(srcdir)/'`OhmmsData/Libxml2Doc.cpp

Libxml2Doc.obj: OhmmsData/Libxml2Doc.cpp
@AMDEP_TRUE@	source='OhmmsData/Libxml2Doc.cpp' object='Libxml2Doc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Libxml2Doc.Po' tmpdepfile='$(DEPDIR)/Libxml2Doc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Libxml2Doc.obj `cygpath -w OhmmsData/Libxml2Doc.cpp`

Libxml2Doc.lo: OhmmsData/Libxml2Doc.cpp
@AMDEP_TRUE@	source='OhmmsData/Libxml2Doc.cpp' object='Libxml2Doc.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Libxml2Doc.Plo' tmpdepfile='$(DEPDIR)/Libxml2Doc.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Libxml2Doc.lo `test -f 'OhmmsData/Libxml2Doc.cpp' || echo '$(srcdir)/'`OhmmsData/Libxml2Doc.cpp

ProjectData.o: OhmmsApp/ProjectData.cpp
@AMDEP_TRUE@	source='OhmmsApp/ProjectData.cpp' object='ProjectData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ProjectData.Po' tmpdepfile='$(DEPDIR)/ProjectData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProjectData.o `test -f 'OhmmsApp/ProjectData.cpp' || echo '$(srcdir)/'`OhmmsApp/ProjectData.cpp

ProjectData.obj: OhmmsApp/ProjectData.cpp
@AMDEP_TRUE@	source='OhmmsApp/ProjectData.cpp' object='ProjectData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ProjectData.Po' tmpdepfile='$(DEPDIR)/ProjectData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProjectData.obj `cygpath -w OhmmsApp/ProjectData.cpp`

ProjectData.lo: OhmmsApp/ProjectData.cpp
@AMDEP_TRUE@	source='OhmmsApp/ProjectData.cpp' object='ProjectData.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ProjectData.Plo' tmpdepfile='$(DEPDIR)/ProjectData.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ProjectData.lo `test -f 'OhmmsApp/ProjectData.cpp' || echo '$(srcdir)/'`OhmmsApp/ProjectData.cpp

RandomNumberControl.o: OhmmsApp/RandomNumberControl.cpp
@AMDEP_TRUE@	source='OhmmsApp/RandomNumberControl.cpp' object='RandomNumberControl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomNumberControl.Po' tmpdepfile='$(DEPDIR)/RandomNumberControl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomNumberControl.o `test -f 'OhmmsApp/RandomNumberControl.cpp' || echo '$(srcdir)/'`OhmmsApp/RandomNumberControl.cpp

RandomNumberControl.obj: OhmmsApp/RandomNumberControl.cpp
@AMDEP_TRUE@	source='OhmmsApp/RandomNumberControl.cpp' object='RandomNumberControl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomNumberControl.Po' tmpdepfile='$(DEPDIR)/RandomNumberControl.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomNumberControl.obj `cygpath -w OhmmsApp/RandomNumberControl.cpp`

RandomNumberControl.lo: OhmmsApp/RandomNumberControl.cpp
@AMDEP_TRUE@	source='OhmmsApp/RandomNumberControl.cpp' object='RandomNumberControl.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/RandomNumberControl.Plo' tmpdepfile='$(DEPDIR)/RandomNumberControl.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RandomNumberControl.lo `test -f 'OhmmsApp/RandomNumberControl.cpp' || echo '$(srcdir)/'`OhmmsApp/RandomNumberControl.cpp

OhmmsBlas.o: Numerics/OhmmsBlas.cpp
@AMDEP_TRUE@	source='Numerics/OhmmsBlas.cpp' object='OhmmsBlas.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsBlas.Po' tmpdepfile='$(DEPDIR)/OhmmsBlas.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsBlas.o `test -f 'Numerics/OhmmsBlas.cpp' || echo '$(srcdir)/'`Numerics/OhmmsBlas.cpp

OhmmsBlas.obj: Numerics/OhmmsBlas.cpp
@AMDEP_TRUE@	source='Numerics/OhmmsBlas.cpp' object='OhmmsBlas.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsBlas.Po' tmpdepfile='$(DEPDIR)/OhmmsBlas.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsBlas.obj `cygpath -w Numerics/OhmmsBlas.cpp`

OhmmsBlas.lo: Numerics/OhmmsBlas.cpp
@AMDEP_TRUE@	source='Numerics/OhmmsBlas.cpp' object='OhmmsBlas.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OhmmsBlas.Plo' tmpdepfile='$(DEPDIR)/OhmmsBlas.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OhmmsBlas.lo `test -f 'Numerics/OhmmsBlas.cpp' || echo '$(srcdir)/'`Numerics/OhmmsBlas.cpp

sysutil.o: Platforms/sysutil.cpp
@AMDEP_TRUE@	source='Platforms/sysutil.cpp' object='sysutil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sysutil.Po' tmpdepfile='$(DEPDIR)/sysutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysutil.o `test -f 'Platforms/sysutil.cpp' || echo '$(srcdir)/'`Platforms/sysutil.cpp

sysutil.obj: Platforms/sysutil.cpp
@AMDEP_TRUE@	source='Platforms/sysutil.cpp' object='sysutil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sysutil.Po' tmpdepfile='$(DEPDIR)/sysutil.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysutil.obj `cygpath -w Platforms/sysutil.cpp`

sysutil.lo: Platforms/sysutil.cpp
@AMDEP_TRUE@	source='Platforms/sysutil.cpp' object='sysutil.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sysutil.Plo' tmpdepfile='$(DEPDIR)/sysutil.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sysutil.lo `test -f 'Platforms/sysutil.cpp' || echo '$(srcdir)/'`Platforms/sysutil.cpp

OneDimGridFactory.o: QMCFactory/OneDimGridFactory.cpp
@AMDEP_TRUE@	source='QMCFactory/OneDimGridFactory.cpp' object='OneDimGridFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OneDimGridFactory.Po' tmpdepfile='$(DEPDIR)/OneDimGridFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OneDimGridFactory.o `test -f 'QMCFactory/OneDimGridFactory.cpp' || echo '$(srcdir)/'`QMCFactory/OneDimGridFactory.cpp

OneDimGridFactory.obj: QMCFactory/OneDimGridFactory.cpp
@AMDEP_TRUE@	source='QMCFactory/OneDimGridFactory.cpp' object='OneDimGridFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OneDimGridFactory.Po' tmpdepfile='$(DEPDIR)/OneDimGridFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OneDimGridFactory.obj `cygpath -w QMCFactory/OneDimGridFactory.cpp`

OneDimGridFactory.lo: QMCFactory/OneDimGridFactory.cpp
@AMDEP_TRUE@	source='QMCFactory/OneDimGridFactory.cpp' object='OneDimGridFactory.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/OneDimGridFactory.Plo' tmpdepfile='$(DEPDIR)/OneDimGridFactory.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o OneDimGridFactory.lo `test -f 'QMCFactory/OneDimGridFactory.cpp' || echo '$(srcdir)/'`QMCFactory/OneDimGridFactory.cpp

Communicate.o: Message/Communicate.cpp
@AMDEP_TRUE@	source='Message/Communicate.cpp' object='Communicate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Communicate.Po' tmpdepfile='$(DEPDIR)/Communicate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Communicate.o `test -f 'Message/Communicate.cpp' || echo '$(srcdir)/'`Message/Communicate.cpp

Communicate.obj: Message/Communicate.cpp
@AMDEP_TRUE@	source='Message/Communicate.cpp' object='Communicate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Communicate.Po' tmpdepfile='$(DEPDIR)/Communicate.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Communicate.obj `cygpath -w Message/Communicate.cpp`

Communicate.lo: Message/Communicate.cpp
@AMDEP_TRUE@	source='Message/Communicate.cpp' object='Communicate.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Communicate.Plo' tmpdepfile='$(DEPDIR)/Communicate.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Communicate.lo `test -f 'Message/Communicate.cpp' || echo '$(srcdir)/'`Message/Communicate.cpp
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES) ohmms-config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && tags="$$tags -i $$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS) ohmms-config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(HEADERS) ohmms-config.h
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgincludedir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-recursive

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-libtool \
	distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) GTAGS all all-am check check-am clean \
	clean-generic clean-libLIBRARIES clean-libtool clean-recursive \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-hdr distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-libLIBRARIES install-man \
	install-pkgincludeHEADERS install-recursive install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	installdirs-recursive maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	tags tags-recursive uninstall uninstall-am uninstall-info-am \
	uninstall-info-recursive uninstall-libLIBRARIES \
	uninstall-pkgincludeHEADERS uninstall-recursive

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
